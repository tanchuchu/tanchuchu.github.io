<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>谭楚楚</title>
  
  <subtitle>尚未执佩剑，转眼即江湖</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tanchuchu.github.io/"/>
  <updated>2020-11-03T15:22:19.405Z</updated>
  <id>http://tanchuchu.github.io/</id>
  
  <author>
    <name>谭楚楚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>const常量基础详解</title>
    <link href="http://tanchuchu.github.io/posts/12153/"/>
    <id>http://tanchuchu.github.io/posts/12153/</id>
    <published>2020-11-03T15:17:22.795Z</published>
    <updated>2020-11-03T15:22:19.405Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是const常量"><a href="#什么是const常量" class="headerlink" title="什么是const常量"></a>什么是const常量</h3><p>定义常量,常量就是不变的值，用在函数，变量，数组，指针类型说明前（如：const int a=10;）表示的a值永远是10.</p><a id="more"></a><h3 id="const详细"><a href="#const详细" class="headerlink" title="const详细"></a>const详细</h3><h4 id="声明const"><a href="#声明const" class="headerlink" title="声明const"></a>声明const</h4><p>const声明一个只读的常量。一旦声明，常量的值就不能改变。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">PI <span class="comment">// 3.1415</span></span><br><span class="line"></span><br><span class="line">PI = <span class="number">3</span>;</span><br><span class="line"><span class="comment">// TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码表明改变常量的值会报错。</p></blockquote><p>const声明的变量不得改变值，这意味着，<code>const</code>一旦声明变量，就必须立即初始化，不能留到以后赋值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> foo;</span><br><span class="line"><span class="comment">// SyntaxError: Missing initializer in const declaration</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码表示，对于const来说，只声明不赋值，就会报错。</p></blockquote><p><code>const</code>的作用域与<code>let</code>命令相同：只在声明所在的块级作用域内有效。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> MAX = <span class="number">5</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MAX <span class="comment">// Uncaught ReferenceError: MAX is not defined</span></span><br></pre></td></tr></table></figure><p><code>const</code>命令声明的常量也是不提升，同样存在暂时性死区，只能在声明的位置后面使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(MAX); <span class="comment">// ReferenceError</span></span><br><span class="line">  <span class="keyword">const</span> MAX = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面代码在常量MAX声明之前就调用，结果报错。</p></blockquote><p><code>const</code>声明的常量，也与<code>let</code>一样不可重复声明。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> message = <span class="string">"Hello!"</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下两行都会报错</span></span><br><span class="line"><span class="keyword">const</span> message = <span class="string">"Goodbye!"</span>;</span><br><span class="line"><span class="keyword">const</span> age = <span class="number">30</span>;</span><br></pre></td></tr></table></figure><p>对于复合类型的变量，变量名不指向数据，而是指向数据所在的地址。<code>const</code>命令只是保证变量名指向的地址不变，<br>并不保证该地址的数据不变，所以将一个对象声明为常量必须非常小心。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = &#123;&#125;;</span><br><span class="line">foo.prop = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">foo.prop</span><br><span class="line"><span class="comment">// 123</span></span><br><span class="line">foo = &#123;&#125;; <span class="comment">// TypeError: "foo" is read-only</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码中，常量 foo 储存的是一个地址，这个地址指向一个对象。<br>不可变的只是这个地址，即不能把 foo 指向另一个地址，但对象本身是可变的，所以依然可以为其添加新属性。</p></blockquote><p>下面是另一个例子。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [];</span><br><span class="line">a.push(<span class="string">'Hello'</span>); <span class="comment">// 可执行</span></span><br><span class="line">a.length = <span class="number">0</span>;    <span class="comment">// 可执行</span></span><br><span class="line">a = [<span class="string">'Dave'</span>];    <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码中，常量a是一个数组，这个数组本身是可写的，但是如果将另一个数组赋值给a，就会报错。<br>如果真的想将对象冻结，应该使用Object.freeze方法。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = <span class="built_in">Object</span>.freeze(&#123;&#125;);</span><br><span class="line"><span class="comment">// 常规模式时，下面一行不起作用；</span></span><br><span class="line"><span class="comment">// 严格模式时，该行会报错</span></span><br><span class="line">foo.prop = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><blockquote><p>上面代码中，常量foo指向一个冻结的对象，所以添加新属性不起作用，严格模式时还会报错。</p></blockquote><p>除了将对象本身冻结，对象的属性也应该冻结。下面是一个将对象彻底冻结的函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> constantize = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">Object</span>.freeze(obj);</span><br><span class="line">  <span class="built_in">Object</span>.keys(obj).forEach( <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">typeof</span> obj[key] === <span class="string">'object'</span> ) &#123;</span><br><span class="line">      constantize( obj[key] );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>ES5只有两种声明变量的方法：<code>var</code>命令和<code>function</code>命令。ES6除了添加<code>let</code>和<code>const</code>命令，<br>后面章节还会提到，另外两种声明变量的方法：<code>import</code>命令和<code>class</code>命令。所以，<br>ES6一共有6种声明变量的方法。</p></blockquote><h4 id="顶层对象的属性-window"><a href="#顶层对象的属性-window" class="headerlink" title="顶层对象的属性(window)"></a>顶层对象的属性(window)</h4><p>顶层对象，在浏览器环境指的是 window 对象，在 Node 指的是 global 对象。ES5 之中，<br>顶层对象的属性与全局变量是等价的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.a = <span class="number">1</span>;</span><br><span class="line">a <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">window</span>.a <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码中，顶层对象的属性赋值与全局变量的赋值，是同一件事。</p></blockquote><p>顶层对象的属性与全局变量挂钩，被认为是 JavaScript 语言最大的设计败笔之一。<br>这样的设计带来了几个很大的问题，首先是没法在编译时就报出变量未声明的错误，<br>只有运行时才能知道（因为全局变量可能是顶层对象的属性创造的，而属性的创造是动态的）；<br>其次，程序员很容易不知不觉地就创建了全局变量（比如打字出错）；<br>最后，顶层对象的属性是到处可以读写的，这非常不利于模块化编程。<br>另一方面，window 对象有实体含义，指的是浏览器的窗口对象，顶层对象是一个有实体含义的对象，<br>也是不合适的。</p><p>ES6 为了改变这一点，一方面规定，为了保持兼容性，<code>var</code>命令和<code>function</code>命令声明的全局变量，<br>依旧是顶层对象的属性；另一方面规定，<code>let</code>命令、<code>const</code>命令、<code>class</code>命令声明的全局变量，<br>不属于顶层对象的属性。也就是说，从ES6开始，全局变量将逐步与顶层对象的属性脱钩。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 如果在Node的REPL环境，可以写成global.a</span></span><br><span class="line"><span class="comment">// 或者采用通用方法，写成this.a</span></span><br><span class="line"><span class="built_in">window</span>.a <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">window</span>.b <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><blockquote><p>上面代码中，全局变量 a 由<code>var</code>命令声明，所以它是顶层对象的属性；<br>全局变量 b 由<code>let</code> 命令声明，所以它不是顶层对象的属性，返回<code>undefined</code>。</p></blockquote><h4 id="global-对象"><a href="#global-对象" class="headerlink" title="global 对象"></a>global 对象</h4><p>ES5的顶层对象，本身也是一个问题，因为它在各种实现里面是不统一的。</p><ul><li>浏览器里面，顶层对象是window，但 Node 和 Web Worker 没有window。</li><li>浏览器和 Web Worker 里面，self也指向顶层对象，但是Node没有self。</li><li>Node 里面，顶层对象是global，但其他环境都不支持。</li></ul><p>同一段代码为了能够在各种环境，都能取到顶层对象，现在一般是使用<code>this</code>变量，但是有局限性。</p><ul><li>全局环境中,<code>this</code>会返回顶层对象。但是，Node 模块和 ES6 模块中，<code>this</code> 返回的是当前模块。</li><li>函数里面的<code>this</code>,如果函数不是作为对象的方法运行，而是单纯作为函数运行，<code>this</code>会指向顶层对象。但是，严格模式下，这时<code>this</code>会返回<code>undefined</code>。</li><li>不管是严格模式，还是普通模式，<code>new Function(&#39;return this&#39;)()</code>，总是会返回全局对象。但是，如果浏览器用了<code>CSP（Content Security Policy，内容安全政策）</code>，那么<code>eval</code>、<code>new Function</code>这些方法都可能无法使用。</li></ul><p>综上所述，很难找到一种方法，可以在所有情况下，都取到顶层对象。下面是两种勉强可以使用的方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法一</span></span><br><span class="line">(<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">'undefined'</span></span><br><span class="line">   ? <span class="built_in">window</span></span><br><span class="line">   : (<span class="keyword">typeof</span> process === <span class="string">'object'</span> &amp;&amp;</span><br><span class="line">      <span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span> &amp;&amp;</span><br><span class="line">      <span class="keyword">typeof</span> global === <span class="string">'object'</span>)</span><br><span class="line">     ? global</span><br><span class="line">     : <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="keyword">var</span> getGlobal = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> self !== <span class="string">'undefined'</span>) &#123; <span class="keyword">return</span> self; &#125;<span class="comment">// Web Worker</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">'undefined'</span>) &#123; <span class="keyword">return</span> <span class="built_in">window</span>; &#125; <span class="comment">// windew</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> global !== <span class="string">'undefined'</span>) &#123; <span class="keyword">return</span> global; &#125; <span class="comment">// node环境</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'unable to locate global object'</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>现在有一个提案，在语言标准的层面，引入 global 作为顶层对象。也就是说，在所有环境下，<br>global 都是存在的，都可以从它拿到顶层对象。</p><p>垫片库 system.global 模拟了这个提案，可以在所有环境拿到 global。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS的写法</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'system.global/shim'</span>)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6模块的写法</span></span><br><span class="line"><span class="keyword">import</span> shim <span class="keyword">from</span> <span class="string">'system.global/shim'</span>; shim();</span><br></pre></td></tr></table></figure><blockquote><p>上面代码可以保证各种环境里面，global对象都是存在的。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS的写法</span></span><br><span class="line"><span class="keyword">var</span> global = <span class="built_in">require</span>(<span class="string">'system.global'</span>)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6模块的写法</span></span><br><span class="line"><span class="keyword">import</span> getGlobal <span class="keyword">from</span> <span class="string">'system.global'</span>;</span><br><span class="line"><span class="keyword">const</span> global = getGlobal();</span><br></pre></td></tr></table></figure><blockquote><p>上面代码将顶层对象放入变量global。</p></blockquote><p><code>globalThis</code> 提供了一个标准的方式来获取不同环境下的全局 <code>this</code>  对象（也就是全局对象自身）。<br>不像 <code>window</code> 或者 <code>self</code> 这些属性，它确保可以在有无窗口的各种环境下正常工作。<br>所以，你可以安心的使用 <code>globalThis</code>，不必担心它的运行环境。为便于记忆，你只需要记住，全局作用域中的<br> <code>this</code> 就是 <code>globalThis</code>。</p><h3 id="我的总结"><a href="#我的总结" class="headerlink" title="我的总结"></a>我的总结</h3><p>1.const</p><ul><li>本质：<code>const</code>定义一个常量 指向一个内存地址不变，但不能影响内存的数据变化（比如：复合型变量(数组，对象)）</li><li>和<code>let</code>一样有 <code>暂时性死区</code>,不能在声明前使用</li><li>没有变量提升</li></ul><p>2.顶层对象属性</p><ul><li>顶层对象的属性与全局变量是等价的 (window)</li><li>es6有声明变量的方法，两种<code>var</code>,<code>function</code>声明全局变量，还有<code>let</code>,<code>const</code>,<code>class</code>,<code>import</code>  </li></ul><p>3.Global对象</p><ul><li>浏览器里面里使用<code>window</code></li><li>web Worker<code>self</code></li><li>Node 里使用<code>global</code></li><li>三种环境都能用<code>globalThis</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是const常量&quot;&gt;&lt;a href=&quot;#什么是const常量&quot; class=&quot;headerlink&quot; title=&quot;什么是const常量&quot;&gt;&lt;/a&gt;什么是const常量&lt;/h3&gt;&lt;p&gt;定义常量,常量就是不变的值，用在函数，变量，数组，指针类型说明前（如：const int a=10;）表示的a值永远是10.&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://tanchuchu.github.io/categories/js/"/>
    
    
      <category term="es6" scheme="http://tanchuchu.github.io/tags/es6/"/>
    
      <category term="js" scheme="http://tanchuchu.github.io/tags/js/"/>
    
      <category term="const" scheme="http://tanchuchu.github.io/tags/const/"/>
    
  </entry>
  
  <entry>
    <title>v-if与v-show、v-if与v-for</title>
    <link href="http://tanchuchu.github.io/posts/60979/"/>
    <id>http://tanchuchu.github.io/posts/60979/</id>
    <published>2020-11-02T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.427Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="v-if-vs-v-show"><a href="#v-if-vs-v-show" class="headerlink" title="v-if vs v-show"></a>v-if vs v-show</h3><figure class="highlight plain"><figcaption><span>是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;v-if&#96;&#96;&#96; 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。</span><br><span class="line"></span><br><span class="line">相比之下，&#96;&#96;&#96;v-show&#96;&#96;&#96; 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。</span><br><span class="line"></span><br><span class="line">一般来说，&#96;&#96;&#96;v-if&#96;&#96;&#96; 有更高的切换开销，而 &#96;&#96;&#96;v-show &#96;&#96;&#96;有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用&#96;&#96;&#96; v-show&#96;&#96;&#96; 较好；如果在运行时条件很少改变，则使用 &#96;&#96;&#96;v-if &#96;&#96;&#96;较好。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### v-if 与 v-for 不推荐一起使用</span><br><span class="line">当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级</span><br><span class="line"></span><br><span class="line">### v-for</span><br></pre></td></tr></table></figure><div v-for="(val,keys,index) of object" :key="index"> -  - </div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v-for遍历对象时第一个参数是值，第二个参数是键，第三个是索引</span><br><span class="line"></span><br><span class="line">可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法</span><br><span class="line">建议尽可能在使用 v-for 时提供 key attribute</span><br></pre></td></tr></table></figure>data(){    return{      object: {        title: 'How to do lists in Vue',        author: 'Jane Doe',        publishedAt: '2016-04-10'      }<pre><code>}</code></pre><p>  }</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;v-if-vs-v-show&quot;&gt;&lt;a href=&quot;#v-if-vs-v-show&quot; class=&quot;headerlink&quot; title=&quot;v-if vs v-show&quot;&gt;&lt;/a&gt;v-if vs v-show&lt;/h3&gt;&lt;figure
      
    
    </summary>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/categories/vue/"/>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>class与style绑定</title>
    <link href="http://tanchuchu.github.io/posts/54638/"/>
    <id>http://tanchuchu.github.io/posts/54638/</id>
    <published>2020-11-01T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.412Z</updated>
    
    <content type="html"><![CDATA[<p>我们可以传给 v-bind:class 一个对象，以动态地切换 class</p><p>v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名</p><a id="more"></a><h3 id="v-bind-class-class"><a href="#v-bind-class-class" class="headerlink" title="v-bind:class (:class)"></a>v-bind:class (:class)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;单独绑定class</span><br><span class="line">&lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;&#123;activecss : active , radiuscss : radius&#125;&quot; &gt;test&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;绑定class数组对象</span><br><span class="line">&lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;[classObj1,classObj2]&quot; &gt;test&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;单独绑定+class数组对象</span><br><span class="line">&lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;[&#123;activecss:active&#125;,classObj1,classObj2]&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;三元二次</span><br><span class="line">&lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;[ active ? classObj2:&#39;&#39; , classObj1]&quot; &gt;test&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;结合计算属性</span><br><span class="line">&lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;classObj3&quot; &gt;test&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">                loading:true,</span><br><span class="line">                getData:true,</span><br><span class="line">                active:true,</span><br><span class="line">                radius:false,</span><br><span class="line">                classObj1:&#123;</span><br><span class="line">                  bordercss:true,</span><br><span class="line">                &#125;,</span><br><span class="line">                classObj2:&#123;</span><br><span class="line">                  fontcss:true</span><br><span class="line">                &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">computed:&#123;</span><br><span class="line">    classObj3()&#123;</span><br><span class="line">      return&#123;</span><br><span class="line">        colorcss:this.loading &amp;&amp; this.getData</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">.box&#123;</span><br><span class="line">  height: 100px;</span><br><span class="line">  width: 100px;</span><br><span class="line">  background-color: green;</span><br><span class="line">&#125;</span><br><span class="line">  .activecss&#123;</span><br><span class="line">    margin: 100px auto;</span><br><span class="line">  &#125;</span><br><span class="line">  .radiuscss&#123;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line">  &#125;</span><br><span class="line">.bordercss&#123;</span><br><span class="line">  border:2px solid red</span><br><span class="line">&#125;</span><br><span class="line">.fontcss&#123;</span><br><span class="line">  font-size:50px</span><br><span class="line">&#125;</span><br><span class="line">  .colorcss&#123;</span><br><span class="line">    color: purple;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>当 active 或者 radius 变化时，class 列表将相应地更新。例如，如果 radius 的值为 true，class 列表将变为 “box activecss radiuscss”</p><h3 id="v-bind-style-style"><a href="#v-bind-style-style" class="headerlink" title="v-bind:style (:style)"></a>v-bind:style (:style)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;对象语法</span><br><span class="line"> &lt;div :style&#x3D;&quot;&#123;fontSize:fontSize , height:height , width:width , backgroundColor:backgroundColor&#125;&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;div :style&#x3D;&quot;boxStyle1&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line"> &#x2F;&#x2F;数组语法</span><br><span class="line"> &lt;div :style&#x3D;&quot;[boxStyle1,boxStyle2]&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line"> &#x2F;&#x2F;多重值</span><br><span class="line"> &lt;div :style&#x3D;&quot;[&#123;display:[&#39;-webkit-box&#39;, &#39;-ms-flexbox&#39;,&#39;flex&#39;]&#125;,boxStyle2]&quot;&gt;</span><br><span class="line">   &lt;div :style&#x3D;&quot;boxStyle1&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line">   &lt;div :style&#x3D;&quot;boxStyle1&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line">   &lt;div :style&#x3D;&quot;boxStyle1&quot;&gt;test&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">             fontSize:&#39;50px&#39;,</span><br><span class="line">              height:&#39;100px&#39;,</span><br><span class="line">              width:&#39;100px&#39;,</span><br><span class="line">              backgroundColor:&#39;red&#39;,</span><br><span class="line">              boxStyle1:&#123;</span><br><span class="line">                fontSize:&#39;50px&#39;,</span><br><span class="line">                height:&#39;100px&#39;,</span><br><span class="line">                width:&#39;100px&#39;,</span><br><span class="line">                backgroundColor:&#39;red&#39;,</span><br><span class="line">                margin:&#39;20px&#39;</span><br><span class="line">              &#125;,</span><br><span class="line">              boxStyle2:&#123;</span><br><span class="line">                border:&#39;2px solid green&#39;</span><br><span class="line">              &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们可以传给 v-bind:class 一个对象，以动态地切换 class&lt;/p&gt;
&lt;p&gt;v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS property 名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用引号括起来) 来命名&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/categories/vue/"/>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>计算属性computed与监听属性watch</title>
    <link href="http://tanchuchu.github.io/posts/53712/"/>
    <id>http://tanchuchu.github.io/posts/53712/</id>
    <published>2020-11-01T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1—–计算属性computed-自带getter和setter方法"><a href="#1—–计算属性computed-自带getter和setter方法" class="headerlink" title="1—–计算属性computed 自带getter和setter方法"></a>1—–计算属性computed 自带getter和setter方法</h2><p><img src="https://git.kancloud.cn/repos/tanchuchu/webhtmljs/raw/7f4054bba106eec0e235f6f383eeeef12a51f21d/images/screenshot_1578214401061.png?access-token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDQ0MzEwMjAsImlhdCI6MTYwNDM4NzgyMCwicmVwb3NpdG9yeSI6InRhbmNodWNodVwvd2ViaHRtbGpzIiwidXNlciI6eyJ1c2VybmFtZSI6InRhbmNodWNodSIsIm5hbWUiOiJ0YW5jaHVjaHUiLCJlbWFpbCI6IjI1OTg4Mjk2MzZAcXEuY29tIiwidG9rZW4iOiJmNGVhZDFmMTU1NDEyMGFhMzU2ODlkNjQ4YzE5NzkzZCIsImF1dGhvcml6ZSI6eyJwdWxsIjp0cnVlLCJwdXNoIjp0cnVlLCJhZG1pbiI6dHJ1ZX19fQ.O9xVyGMJHzvjKxVoduXD39fXDG1t_a4MhE6E06ClOOg" alt=""></p><p>减少模板中的业务逻辑，进行数据缓存，依赖固定的数据类型（响应式数据）</p><h2 id="2——监听属性watch-必须要先在data里面定义属性才可以进行监听"><a href="#2——监听属性watch-必须要先在data里面定义属性才可以进行监听" class="headerlink" title="2——监听属性watch 必须要先在data里面定义属性才可以进行监听"></a>2——监听属性watch 必须要先在data里面定义属性才可以进行监听</h2><p><img src="https://git.kancloud.cn/repos/tanchuchu/webhtmljs/raw/7f4054bba106eec0e235f6f383eeeef12a51f21d/images/screenshot_1578302282125.png?access-token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDQ0MzEwMjAsImlhdCI6MTYwNDM4NzgyMCwicmVwb3NpdG9yeSI6InRhbmNodWNodVwvd2ViaHRtbGpzIiwidXNlciI6eyJ1c2VybmFtZSI6InRhbmNodWNodSIsIm5hbWUiOiJ0YW5jaHVjaHUiLCJlbWFpbCI6IjI1OTg4Mjk2MzZAcXEuY29tIiwidG9rZW4iOiJmNGVhZDFmMTU1NDEyMGFhMzU2ODlkNjQ4YzE5NzkzZCIsImF1dGhvcml6ZSI6eyJwdWxsIjp0cnVlLCJwdXNoIjp0cnVlLCJhZG1pbiI6dHJ1ZX19fQ.O9xVyGMJHzvjKxVoduXD39fXDG1t_a4MhE6E06ClOOg" alt=""></p><p>3—-总结<br><img src="https://git.kancloud.cn/repos/tanchuchu/webhtmljs/raw/7f4054bba106eec0e235f6f383eeeef12a51f21d/images/screenshot_1578303281744.png?access-token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDQ0MzEwMjAsImlhdCI6MTYwNDM4NzgyMCwicmVwb3NpdG9yeSI6InRhbmNodWNodVwvd2ViaHRtbGpzIiwidXNlciI6eyJ1c2VybmFtZSI6InRhbmNodWNodSIsIm5hbWUiOiJ0YW5jaHVjaHUiLCJlbWFpbCI6IjI1OTg4Mjk2MzZAcXEuY29tIiwidG9rZW4iOiJmNGVhZDFmMTU1NDEyMGFhMzU2ODlkNjQ4YzE5NzkzZCIsImF1dGhvcml6ZSI6eyJwdWxsIjp0cnVlLCJwdXNoIjp0cnVlLCJhZG1pbiI6dHJ1ZX19fQ.O9xVyGMJHzvjKxVoduXD39fXDG1t_a4MhE6E06ClOOg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1—–计算属性computed-自带getter和setter方法&quot;&gt;&lt;a href=&quot;#1—–计算属性computed-自带getter和setter方法&quot; class=&quot;headerlink&quot; title=&quot;1—–计算属性computed 自带getter和s
      
    
    </summary>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/categories/vue/"/>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue修饰符</title>
    <link href="http://tanchuchu.github.io/posts/17199/"/>
    <id>http://tanchuchu.github.io/posts/17199/</id>
    <published>2020-11-01T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.432Z</updated>
    
    <content type="html"><![CDATA[<p>修饰符 (modifier) 是以半角句号 . 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定，又可以说其是对参数绑定后的方法拓展。</p><a id="more"></a><p>以下给出几个常用的修饰符方法：</p><ul><li>lazy这个修饰符会在光标离开input框才会更新数据</li></ul><figure class="highlight plain"><figcaption><span>type</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* trim是输入框过滤首尾的空格</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&lt;input type&#x3D;&quot;text&quot; v-model.trim&#x3D;&quot;value&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>number的功能是先输入数字就会限制输入只能是数字</li></ul><figure class="highlight plain"><figcaption><span>type</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* stop是阻止事件冒泡,但默认事件任然会执行</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&lt;button @click.stop&#x3D;&quot;test&quot;&gt;test&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><ul><li>prevent 阻止默认行为，相当于调用了event.preventDefault()方法，比如表单的提交、a标签的跳转就是默认事件，但冒泡事件还是会执行</li></ul><p>ps：加入代码：<code>return false</code>会同事阻止事件冒泡也会阻止默认事件；写上此代码，连接不会被打开，事件也不会传递到上一层的父元素；可以理解为return false就等于同时调用了event.stopPropagation()和event.preventDefault()</p><figure class="highlight plain"><figcaption><span>@click.prevent</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* self 只有元素本身触发时才触发方法，就是只有点击元素本身才会触发</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;&lt;div @click.self&#x3D;&quot;test&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ul><li>once 只能用一次，无论点击几次，执行一次之后都不会再执行</li></ul><p><code>&lt;div @click.once=&quot;test&quot;&gt;&lt;/div&gt;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修饰符 (modifier) 是以半角句号 . 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定，又可以说其是对参数绑定后的方法拓展。&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/categories/vue/"/>
    
    
      <category term="vue" scheme="http://tanchuchu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>webpack性能优化</title>
    <link href="http://tanchuchu.github.io/posts/34455/"/>
    <id>http://tanchuchu.github.io/posts/34455/</id>
    <published>2020-10-25T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.456Z</updated>
    
    <content type="html"><![CDATA[<p>HMR(Hot Module Replacement)：热模块替换 模块热替换（当一个模块发生变化，只会重新打包这一个模块，极大的提升构建速度）<br>source-map 一种提供源代码到构建后代码的映射技术 （如果构建后的代码出错，可以映射追踪到源代码的错误位置）</p><a id="more"></a><h3 id="1-HMR"><a href="#1-HMR" class="headerlink" title="1.HMR"></a>1.HMR</h3><p>当一个文件发生改变时，所有的文件将会被重新构建打包，在开发环境配置deserver中设置<code>hot:true</code></p><p>(1) 样式文件：支持HMR–&gt;开发环境时配置的style-loader内部实现了（所以开发环境我们使用style-loader，而生产环境考虑到代码优化会提取成单独的文件）  </p><p>(2) js文件：默认不使用HMR功能，需要在入口文件中添加支持热模块替换功能的代码，但只能实现对非入口文件的处理，入口文件变化引起的重新构建是不可避免的哦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(module.hot)&#123;</span><br><span class="line">  &#x2F;&#x2F;当module.hot为true时说明开启了HMR功能 ---&gt;让HMR开启的代码</span><br><span class="line">  module.hot.accept(&#39;需要被检测改变的js模块路径&#39;,function () &#123;</span><br><span class="line">      &#x2F;&#x2F;方法会监听改js文件的变化，一旦发生变化，其他默认不会重新构建</span><br><span class="line">    &#x2F;&#x2F;会执行后面的回调函数，我们需要做的是将改文件的关键方法重新执行</span><br><span class="line">     &#x2F;&#x2F;eg:add()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(3) html文件：默认不能使用HMR功能，配置开启热模块替换时，html文件会出现模块变化时不能重新构建的问题，此时需要修改entry，设置<code>entry:[&#39;./src/index.js&#39;,&#39;./src/index.html&#39;]</code></p><h3 id="2-source-map"><a href="#2-source-map" class="headerlink" title="2.source-map"></a>2.source-map</h3><p> 在配置中添加    devtool:’cheap-source-map’ //配置后需要重新运行<br><a href="https://www.kancloud.cn/book/tanchuchu/webhtmljs/edit">图解</a></p><ul><li>内联与外部的区别：外部会生成一个.map的文件，内联没有（内联生成的source-map在构建后的js中，检测时搜索sourceURL即可）；内联构建速度更快</li><li>使用的选择：</li><li>1.开发环境：要求构建速度快，调试更友好</li><li>速度快慢（eval&gt;inline&gt;cheap&gt;…）</li><li>eval-cheap-source-map</li><li>eval-source-map</li><li>调试更友好：</li><li>source-map</li><li>cheap-module-source-map</li><li>cheap-source-map</li><li></li><li>—&gt;eval-source-map / eval-cheap-module-source-map</li><li>2.生产环境：源代码是否隐藏，调试是否更友好（内联会让代码体积变大，so生产环境不使用内联）</li><li>隐藏代码：</li><li>nosources-source-map（隐藏全部代码）</li><li>hidden-source-map（隐藏源代码，不隐藏构建后代码）</li><li></li><li>调试友好：</li><li>source-map</li><li></li><li>—&gt;source-map /cheap-module-source-map</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HMR(Hot Module Replacement)：热模块替换 模块热替换（当一个模块发生变化，只会重新打包这一个模块，极大的提升构建速度）&lt;br&gt;source-map 一种提供源代码到构建后代码的映射技术 （如果构建后的代码出错，可以映射追踪到源代码的错误位置）&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>html压缩</title>
    <link href="http://tanchuchu.github.io/posts/42731/"/>
    <id>http://tanchuchu.github.io/posts/42731/</id>
    <published>2020-10-24T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.444Z</updated>
    
    <content type="html"><![CDATA[<p>html不存在兼容 其压缩在plugins里面直接设置即可</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plugins: [</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: &#39;.&#x2F;src&#x2F;index.html&#39;,</span><br><span class="line">            minify: &#123;</span><br><span class="line">                &#x2F;&#x2F;移除空格</span><br><span class="line">                collapseWhiteSpace:true,</span><br><span class="line">                &#x2F;&#x2F;移除注释</span><br><span class="line">                removeComments:true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;html不存在兼容 其压缩在plugins里面直接设置即可&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>js兼容性处理</title>
    <link href="http://tanchuchu.github.io/posts/15652/"/>
    <id>http://tanchuchu.github.io/posts/15652/</id>
    <published>2020-10-24T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.490Z</updated>
    
    <content type="html"><![CDATA[<p>js 兼容处理 –&gt; babel @babel/core (babel核心库) babel-loader</p><p>1、基本js兼容处理 –&gt; @babel/preset-env —&gt;处理不了如promise等的高级语法</p><p>2、全部js兼容处理 –&gt; @babel/polyfilll (不是babel插件，下载后在入口文件引入即可) —&gt;全部处理，体积太大</p><p>3、按需加载 –&gt; corejs </p><a id="more"></a><h3 id="1-基本js兼容处理-—-gt-babel-preset-env"><a href="#1-基本js兼容处理-—-gt-babel-preset-env" class="headerlink" title="1.基本js兼容处理 —&gt; @babel/preset-env"></a>1.基本js兼容处理 —&gt; @babel/preset-env</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">    rules:[</span><br><span class="line">        &#123;</span><br><span class="line">            test:&#x2F;\.js$&#x2F;,</span><br><span class="line">            exclude:&#x2F;node_modules&#x2F;,</span><br><span class="line">            loader:&#39;babel-loader&#39;,</span><br><span class="line">            options: &#123;</span><br><span class="line">                &#x2F;&#x2F;预设babel进行怎样的js处理</span><br><span class="line">                presets:[&quot;@babel&#x2F;preset-env&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="2-全部js兼容处理-—-gt-babel-polyfill-配置好上面基本js兼容处理后再在入口文件引入-babel-polyfill即可"><a href="#2-全部js兼容处理-—-gt-babel-polyfill-配置好上面基本js兼容处理后再在入口文件引入-babel-polyfill即可" class="headerlink" title="2.全部js兼容处理 —&gt;@babel/polyfill (配置好上面基本js兼容处理后再在入口文件引入@babel/polyfill即可)"></a>2.全部js兼容处理 —&gt;@babel/polyfill (配置好上面基本js兼容处理后再在入口文件引入@babel/polyfill即可)</h3><h3 id="3-按需加载-—-gt-corejs"><a href="#3-按需加载-—-gt-corejs" class="headerlink" title="3.按需加载 —&gt;corejs"></a>3.按需加载 —&gt;corejs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.js$&#x2F;,</span><br><span class="line">                exclude:&#x2F;node_modules&#x2F;,</span><br><span class="line">                loader:&#39;babel-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    &#x2F;&#x2F;预设babel进行怎样的js处理</span><br><span class="line">                    presets:[</span><br><span class="line">                        [</span><br><span class="line">                            &#39;@babel&#x2F;preset-env&#39;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                &#x2F;&#x2F;按需加载</span><br><span class="line">                                useBuiltIns:&#39;usage&#39;,</span><br><span class="line">                                &#x2F;&#x2F;指定corejs最新版本</span><br><span class="line">                                corejs:&#123;</span><br><span class="line">                                    version:3</span><br><span class="line">                                &#125;,</span><br><span class="line">                                &#x2F;&#x2F;指定兼容性做到浏览器的哪个版本</span><br><span class="line">                                targets:&#123;</span><br><span class="line">                                    chrome:&#39;60&#39;,</span><br><span class="line">                                    firefox:&#39;60&#39;,</span><br><span class="line">                                    ie:&#39;9&#39;,</span><br><span class="line">                                    safari:&#39;10&#39;,</span><br><span class="line">                                    edge:&#39;17&#39;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="js压缩"><a href="#js压缩" class="headerlink" title="js压缩"></a>js压缩</h3><p>将mode:production 即可 生产模式下js会自动压缩</p><h4 id="总结：基本js兼容处理-按需加载即可完成js兼容处理"><a href="#总结：基本js兼容处理-按需加载即可完成js兼容处理" class="headerlink" title="总结：基本js兼容处理+按需加载即可完成js兼容处理"></a>总结：基本js兼容处理+按需加载即可完成js兼容处理</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js 兼容处理 –&amp;gt; babel @babel/core (babel核心库) babel-loader&lt;/p&gt;
&lt;p&gt;1、基本js兼容处理 –&amp;gt; @babel/preset-env —&amp;gt;处理不了如promise等的高级语法&lt;/p&gt;
&lt;p&gt;2、全部js兼容处理 –&amp;gt; @babel/polyfilll (不是babel插件，下载后在入口文件引入即可) —&amp;gt;全部处理，体积太大&lt;/p&gt;
&lt;p&gt;3、按需加载 –&amp;gt; corejs &lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack生产环境设置</title>
    <link href="http://tanchuchu.github.io/posts/31383/"/>
    <id>http://tanchuchu.github.io/posts/31383/</id>
    <published>2020-10-24T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.478Z</updated>
    
    <content type="html"><![CDATA[<h3 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;)</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;)</span><br><span class="line">const MiniCssExtractPlugin &#x3D; require(&#39;mini-css-extract-plugin&#39;)</span><br><span class="line">const OptimizeCssAssetsWebpackPlugin &#x3D; require(&#39;optimize-css-assets-webpack-plugin&#39;)</span><br><span class="line">const commonCssLoader &#x3D; &#123;</span><br><span class="line">        MiniCssExtractPlugin.loader,</span><br><span class="line">        &#39;css-loader&#39;,</span><br><span class="line">        &#123;</span><br><span class="line">            loader:&#39;postcss-loader&#39;,</span><br><span class="line">            options: &#123;</span><br><span class="line">                postcssOptions:&#123;</span><br><span class="line">                    plugins:[require(&quot;postcss-preset-env&quot;)()]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry: &#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: &quot;js&#x2F;built.js&quot;,</span><br><span class="line">        path:resolve(__dirname,build)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[...commonCssLoader]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;&#x2F;&#x2F;use数组的loader执行顺序是由下往上，less-loader将less文件转化成css，再通过兼容处理，css-loader将css加载到js中，再提取成单独的文件</span><br><span class="line">                test:&#x2F;\.less$&#x2F;,</span><br><span class="line">                use:[...commonCssLoader ,&#39;less-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\(jpg|png|gif)$&#x2F;,</span><br><span class="line">                loader: &#39;url-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    limit:8*1024,</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;,</span><br><span class="line">                    esModule:false</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.html$&#x2F;,</span><br><span class="line">                loader:&#39;html-loader&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                exclude:&#x2F;\.(html|js|css|jpg|png|gif)$&#x2F;,</span><br><span class="line">                loader:&#39;file-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;,</span><br><span class="line">                    outputPath:&#39;media&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.js$&#x2F;,</span><br><span class="line">                loader:&#39;eslint-loader&#39;,</span><br><span class="line">                enforce:&#39;pre&#39;, &#x2F;&#x2F;正常来说，一个文件只能被一个loader处理；当一个文件被多个loader处理时，需要指定loader的先后顺序</span><br><span class="line">                exclude: &#x2F;node_modules&#x2F;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    fix:true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.js$&#x2F;,</span><br><span class="line">                loader:&#39;babel-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    preset:[</span><br><span class="line">                        &#39;@babel&#x2F;preset-env&#39;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            useBuiltIns:&#39;usage&#39;,</span><br><span class="line">                            corejs:&#123;version:3&#125;,</span><br><span class="line">                            targets:&#123;</span><br><span class="line">                                chrome:&#39;60&#39;,</span><br><span class="line">                                firefox:&#39;50&#39;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: &quot;.&#x2F;src&#x2F;index.html&quot;,</span><br><span class="line">            minify:&#123;</span><br><span class="line">                collapseWhiteSpace:true,</span><br><span class="line">                removeComments:true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        new MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename:&#39;css&#x2F;built.css&#39;</span><br><span class="line">        &#125;),</span><br><span class="line">        new OptimizeCssAssetsWebpackPlugin()</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;production&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;test&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;webpack.config.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;@babel&#x2F;core&quot;: &quot;^7.12.3&quot;,</span><br><span class="line">    &quot;@babel&#x2F;polyfill&quot;: &quot;^7.12.1&quot;,</span><br><span class="line">    &quot;@babel&#x2F;preset-env&quot;: &quot;^7.12.1&quot;,</span><br><span class="line">    &quot;babel&quot;: &quot;^6.23.0&quot;,</span><br><span class="line">    &quot;babel-loader&quot;: &quot;^8.1.0&quot;,</span><br><span class="line">    &quot;corejs&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;css-loader&quot;: &quot;^5.0.0&quot;,</span><br><span class="line">    &quot;eslint&quot;: &quot;^7.12.0&quot;,</span><br><span class="line">    &quot;eslint-config-airbnb-base&quot;: &quot;^14.2.0&quot;,</span><br><span class="line">    &quot;eslint-loader&quot;: &quot;^4.0.2&quot;,</span><br><span class="line">    &quot;eslint-plugin-import&quot;: &quot;^2.22.1&quot;,</span><br><span class="line">    &quot;file-loader&quot;: &quot;^6.1.1&quot;,</span><br><span class="line">    &quot;html-loader&quot;: &quot;^1.3.2&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^4.5.0&quot;,</span><br><span class="line">    &quot;less&quot;: &quot;^3.12.2&quot;,</span><br><span class="line">    &quot;less-loader&quot;: &quot;^7.0.2&quot;,</span><br><span class="line">    &quot;mini-css-extract-plugin&quot;: &quot;^1.2.0&quot;,</span><br><span class="line">    &quot;optimize-css-assets-webpack-plugin&quot;: &quot;^5.0.4&quot;,</span><br><span class="line">    &quot;postcss&quot;: &quot;^8.1.1&quot;,</span><br><span class="line">    &quot;postcss-loader&quot;: &quot;^4.0.4&quot;,</span><br><span class="line">    &quot;postcss-preset-env&quot;: &quot;^6.7.0&quot;,</span><br><span class="line">    &quot;style-loader&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;url-loader&quot;: &quot;^4.1.1&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.44.2&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.3.12&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.11.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;&#125;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;browserslist&quot;: &#123;</span><br><span class="line">    &quot;development&quot;: [</span><br><span class="line">      &quot;last 1  chrome version&quot;,</span><br><span class="line">      &quot;last 1  firefox version&quot;,</span><br><span class="line">      &quot;last 1  safari version&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;production&quot;: [</span><br><span class="line">      &quot;&gt;0.2%&quot;,</span><br><span class="line">      &quot;no dead&quot;,</span><br><span class="line">      &quot;no op_mini all&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;eslintConfig&quot;: &#123;</span><br><span class="line">    &quot;extends&quot;: &quot;airbnb-base&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;webpack-config-js&quot;&gt;&lt;a href=&quot;#webpack-config-js&quot; class=&quot;headerlink&quot; title=&quot;webpack.config.js&quot;&gt;&lt;/a&gt;webpack.config.js&lt;/h3&gt;&lt;figure class
      
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>eslint语法检查与兼容</title>
    <link href="http://tanchuchu.github.io/posts/35527/"/>
    <id>http://tanchuchu.github.io/posts/35527/</id>
    <published>2020-10-23T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.438Z</updated>
    
    <content type="html"><![CDATA[<p>eslint针对js语法进行检查 只检查自己的源代码 不检查第三方等—&gt;eslint eslint-loader</p><a id="more"></a><h4 id="package-json文件"><a href="#package-json文件" class="headerlink" title="package.json文件"></a>package.json文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;:&#123;</span><br><span class="line">    &quot;extends&quot;:&quot;airbnb-base&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">下载eslint eslint-loader eslint-config-airbnb-base eslint-plugin-import</span><br><span class="line"></span><br><span class="line">module:&#123;</span><br><span class="line">    rules:[</span><br><span class="line">        &#123;</span><br><span class="line">        test:&#x2F;\.js$&#x2F;,</span><br><span class="line">        loader:&#39;eslint-loader&#39;,</span><br><span class="line">        exclude:&#x2F;node_modules&#x2F;,</span><br><span class="line">        option:&#123;</span><br><span class="line">            &#x2F;&#x2F;自动修复不规范js语法</span><br><span class="line">            fix:true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>js文件中出现警告：unexpected console statement no-console</p><p>可以在需要忽略eslint语法检查的语句上方添加注释eslint-disable-next-line</p><p>//eslint-disable-next-line<br>console.log(1111)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;eslint针对js语法进行检查 只检查自己的源代码 不检查第三方等—&amp;gt;eslint eslint-loader&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>css单独提取、兼容与压缩</title>
    <link href="http://tanchuchu.github.io/posts/43720/"/>
    <id>http://tanchuchu.github.io/posts/43720/</id>
    <published>2020-10-17T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.451Z</updated>
    
    <content type="html"><![CDATA[<p>webpack提取css插件mini-css-extract-plugin</p><p>webpack兼容css postcss</p><p>webpack压缩css 插件opitimize-css-assets-webpack-plugin</p><a id="more"></a><h2 id="1、提取css"><a href="#1、提取css" class="headerlink" title="1、提取css"></a>1、提取css</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line">const MiniCssExtractPlugin &#x3D; require(&#39;mini-css-extract-plugin&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;js&#x2F;build.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[</span><br><span class="line">                    &#x2F;&#x2F; &#39;style-loader&#39;,</span><br><span class="line">                    MiniCssExtractPlugin.loader,</span><br><span class="line">                    &#39;css-loader&#39;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template:&#39;.&#x2F;src&#x2F;index.html&#39;</span><br><span class="line">        &#125;),</span><br><span class="line">        new MiniCssExtractPlugin(&#123;</span><br><span class="line">            &#x2F;&#x2F;打包后的文件路径</span><br><span class="line">            filename: &#39;css&#x2F;index.css&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、css兼容性问题"><a href="#2、css兼容性问题" class="headerlink" title="2、css兼容性问题"></a>2、css兼容性问题</h2><p>##webpack.config.js代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;设置nodejs环境变量</span><br><span class="line">&#x2F;&#x2F; process.env.NODE_ENV &#x3D; &#39;development&#39;;</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;js&#x2F;build.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[</span><br><span class="line">                    &#x2F;&#x2F; &#39;style-loader&#39;,</span><br><span class="line">                    MiniCssExtractPlugin.loader,</span><br><span class="line">                    &#39;css-loader&#39;,</span><br><span class="line">                    &#x2F;&#x2F;css兼容性 --&gt;postcss -----&gt; 安装postcss-loader postcss-preset-env</span><br><span class="line">                    &#x2F;&#x2F;默认loader配置 &#39;postcss-loader&#39;</span><br><span class="line">                    &#x2F;&#x2F;修改默认loader</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader:&#39;postcss-loader&#39;,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            postcssOptions:&#123;</span><br><span class="line">                                plugins: [[&#39;postcss-preset-env&#39;,&#123;&#125;]]</span><br><span class="line">                                &#x2F;&#x2F;或者 plugins: [require(&quot;postcss-preset-env&quot;)()],</span><br><span class="line">                                &#x2F;&#x2F;postcss插件 帮助postcss找到package.json中的browserslist里面的配置，通过配置加载指定的css兼容性样式</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template:&#39;.&#x2F;src&#x2F;index.html&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;,</span><br><span class="line">    stats: &#123;</span><br><span class="line">&#x2F;&#x2F; One of the two if I remember right</span><br><span class="line">        entrypoints: false,</span><br><span class="line">        children: false</span><br><span class="line">    &#125;,</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase:(__dirname , &#39;js&#x2F;build&#39;),</span><br><span class="line">        compress:true,</span><br><span class="line">        port:3000,</span><br><span class="line">        open:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##package.json添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  &quot;browserslist&quot;: &#123;</span><br><span class="line"> &#x2F;&#x2F;开发环境，如果想要将开发环境设为默认环境可设置nodejs环境变量process.env.NODE_ENV &#x3D; &#39;development&#39;</span><br><span class="line">    &quot;development&quot;: [</span><br><span class="line">      &quot;last 1  chrome version&quot;,</span><br><span class="line">      &quot;last 1  firefox version&quot;,</span><br><span class="line">      &quot;last 1  safari version&quot;</span><br><span class="line">    ],</span><br><span class="line">&#x2F;&#x2F;生产环境--默认是生产环境，与mode无关</span><br><span class="line">    &quot;production&quot;: [</span><br><span class="line">      &quot;&gt;0.2%&quot;,</span><br><span class="line">      &quot;no dead&quot;,</span><br><span class="line">      &quot;no op_mini all&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="3、css压缩"><a href="#3、css压缩" class="headerlink" title="3、css压缩"></a>3、css压缩</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下载并引入optimize-css-assets-webpack-plugin</span><br><span class="line">const OptimizeCssAssetsWebpackPlugin &#x3D; require(&#39;optimize-css-assets-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">在plugins里面new OptimizeCssAssetsWebpackPlugin()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;webpack提取css插件mini-css-extract-plugin&lt;/p&gt;
&lt;p&gt;webpack兼容css postcss&lt;/p&gt;
&lt;p&gt;webpack压缩css 插件opitimize-css-assets-webpack-plugin&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack开发环境设置</title>
    <link href="http://tanchuchu.github.io/posts/61788/"/>
    <id>http://tanchuchu.github.io/posts/61788/</id>
    <published>2020-10-17T16:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.468Z</updated>
    
    <content type="html"><![CDATA[<p>开发环境配置：代码能运行即可<br>webpack 会打包输出<br>npx webpack-dev-server 只会在内存中打包不会输出</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;js&#x2F;build.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[&#39;style-loader&#39; , &#39;css-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.less$&#x2F;,</span><br><span class="line">                use:[&#39;style-loader&#39; , &#39;css-loader&#39; , &#39;less-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.html$&#x2F;,</span><br><span class="line">                loader:&#39;html-loader&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.(jpg|png|gif)$&#x2F;,</span><br><span class="line">                loader: &#39;url-loader&#39;,</span><br><span class="line">                options:&#123;</span><br><span class="line">                    limit:2*1024 ,</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39; ,</span><br><span class="line">                    esModule:false,</span><br><span class="line">                    outputPath:&#39;images&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                exclude:&#x2F;\.(html|css|js|less|jpg|png|gif)$&#x2F;,</span><br><span class="line">                loader : &#39;file-loader&#39;,</span><br><span class="line">                options:&#123;</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;,</span><br><span class="line">                    outputPath:&#39;media&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template:&#39;.&#x2F;src&#x2F;index.html&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;,</span><br><span class="line">    devServer:&#123;</span><br><span class="line">        contentBase:resolve(__dirname,&#39;build&#39;),</span><br><span class="line">        compress:true,</span><br><span class="line">        port:3000,</span><br><span class="line">        open:true</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;webpack5与webpack-dev-server版本不兼容</span><br><span class="line">    &#x2F;&#x2F;&quot;webpack&quot;: &quot;^4.44.2&quot;,</span><br><span class="line">    &#x2F;&#x2F; &quot;webpack-cli&quot;: &quot;^3.3.12&quot;,</span><br><span class="line">    &#x2F;&#x2F; &quot;webpack-dev-server&quot;: &quot;^3.11.0&quot;</span><br><span class="line">    &#x2F;&#x2F;兼容版本 需要先npm uninstall webpack webpack-dev-server -g</span><br><span class="line">    &#x2F;&#x2F;npm install webpack@4.44.2 webpack-dev-server@3.11.0 -g</span><br><span class="line">    &#x2F;&#x2F;在package中直接改成该版本在npm install也可，但都需要先移除之前的版本</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发环境配置：代码能运行即可&lt;br&gt;webpack 会打包输出&lt;br&gt;npx webpack-dev-server 只会在内存中打包不会输出&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack简介</title>
    <link href="http://tanchuchu.github.io/posts/28499/"/>
    <id>http://tanchuchu.github.io/posts/28499/</id>
    <published>2020-09-20T04:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.462Z</updated>
    
    <content type="html"><![CDATA[<p>由于浏览器不能识别less等预处理器、es6等更高的语法，所以需要一些工具编译成浏览器能识别的语法，这些一个个小工具分开维护比较麻烦，这个时候前端提出一种构建工具，它包含许多个小工具，webpack就是构建工具的一种。</p><a id="more"></a><h2 id="webpack的是什么"><a href="#webpack的是什么" class="headerlink" title="webpack的是什么"></a>webpack的是什么</h2><p>是一种资源构建工具，是一个静态模块打包器（module bundler）<br><a href="https://www.processon.com/diagraming/5f66e0ce5653bb28eb489e89">图解</a></p><h2 id="webpack的五个核心概念"><a href="#webpack的五个核心概念" class="headerlink" title="webpack的五个核心概念"></a>webpack的五个核心概念</h2><ul><li>Entry 选择which为入口文件，分析构建内部依赖图</li><li>Loader 处理非js文件，翻译成webpack能理解的文件（webpack自身只理解js）</li><li>Plugins(插件) 执行更广的任务，插件的范围包括，从打包优化和压缩到重新定义环境中的变量等</li><li>Output 输出打包后的资源bundle存放到哪里去，以及如何命名</li><li>Mode 指示webpack配置的模式</li></ul><p>1.development模式—-能让代码本地调试运行的环境（简单，能运行即可）<br>2.production模式 —-能让代码优化上线运行的环境（复杂，考虑的问题较多，代码优化用户体检等）</p><h2 id="初始化webpack"><a href="#初始化webpack" class="headerlink" title="初始化webpack"></a>初始化webpack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">npm init &#x2F;&#x2F;初始化</span><br><span class="line">命名...</span><br><span class="line">npm i webpack webpack-cli -g  &#x2F;&#x2F;全局安装webpack和webpack-cli</span><br><span class="line">npm i webpack webpack-cli -D &#x2F;&#x2F;配置成development模式</span><br><span class="line"></span><br><span class="line">项目结构</span><br><span class="line">webpack</span><br><span class="line">-src (打包原文件)</span><br><span class="line">  -index.js (入口文件)</span><br><span class="line">-build (打包后的bundle资源)</span><br><span class="line">  -index.html(可将打包后的built.js资源引入；安装了node也可以在终端执行node .&#x2F;build&#x2F;built.js)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行指令: (引入新的代码需要重新运行指令)</span><br><span class="line">1.开发环境</span><br><span class="line">webpack .&#x2F;src&#x2F;index.js -o .&#x2F;build&#x2F;built.js --mode&#x3D;development</span><br><span class="line">webpack会以 .&#x2F;src&#x2F;index.js为入口文件开始打包，打包后输出到.&#x2F;build&#x2F;built.js文件，整体打包环境是开发环境</span><br><span class="line"></span><br><span class="line">2.生产环境</span><br><span class="line">webpack .&#x2F;src&#x2F;index.js -o .&#x2F;build&#x2F;built.js --mode&#x3D;production</span><br><span class="line">webpack会以.&#x2F;src&#x2F;index.js为入口文件开始打包，打包后输出到.&#x2F;build&#x2F;built.js文件，整体打包环境是生产环境</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打包后会生产一个Hash: 61dd0f6771f995de05bb (可以作为文件命名)</span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ul><li>webpack能处理js、json资源，不能打包css、img等其他资源</li><li>生产环境和开发环境能将es6模块化编译成浏览器能识别的模块化资源</li><li>生产环境会比开发环境多一个压缩js代码</li></ul><h2 id="打包资源"><a href="#打包资源" class="headerlink" title="打包资源"></a>打包资源</h2><p>js/json资源webpack能理解，通过运行只能即可打包完成，此处主要介绍非js/json文件的打包</p><h4 id="打包html资源"><a href="#打包html资源" class="headerlink" title="打包html资源"></a>打包html资源</h4><p>在根目录下创建webpack.config.js文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F;loader的配置：1.下载 2.使用</span><br><span class="line">&#x2F;&#x2F;plugins的配置：1.下载 2.引入 3.使用</span><br><span class="line"></span><br><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;); &#x2F;&#x2F;node核心模块的一个方法</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;build.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#x2F;&#x2F;loader的配置</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        &#x2F;&#x2F;plugins的配置</span><br><span class="line">        &#x2F;&#x2F;打包html下载html-webpack-plugin</span><br><span class="line">        &#x2F;&#x2F;引入后在终端执行webpack指令</span><br><span class="line">        &#x2F;&#x2F;new HtmlWebpackPlugin()功能：默认在build创建一个空的html文件，会自动引入打包输出的所有资源（js&#x2F;css等）</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            &#x2F;&#x2F;会复制.&#x2F;src&#x2F;index.html原文件，并自动引入打包输出的所有资源（js&#x2F;css等）</span><br><span class="line">            template: &quot;.&#x2F;src&#x2F;index.html&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode: &#39;development&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="打包图片资源"><a href="#打包图片资源" class="headerlink" title="打包图片资源"></a>打包图片资源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;)</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename:&#39;built.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#x2F;&#x2F;loader都需要下载 npm i xx-loader -D</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.less$&#x2F;,</span><br><span class="line">                &#x2F;&#x2F;要使用多个loader处理时用use</span><br><span class="line">                use:[&#39;style-loader&#39;,&#39;css-loader&#39;,&#39;less-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;   &#x2F;&#x2F;处理图片资源</span><br><span class="line">                &#x2F;&#x2F;默认处理不了直接引入src下的图片，这个时候需要新的loader</span><br><span class="line">                test:&#x2F;\.(jpg|png|gif)$&#x2F;,</span><br><span class="line">                &#x2F;&#x2F;只需使用一个loader</span><br><span class="line">                &#x2F;&#x2F;下载url-loader file-loader 前者依赖于后者</span><br><span class="line">                loader: &#39;url-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    &#x2F;&#x2F;图片大小小于2kb，就转化成base64（优点：减少请求数量，减轻服务器压力；缺点：文件体积大，请求速度变慢）</span><br><span class="line">                    limit:2*1024, &#x2F;&#x2F;以实际项目最小图片大小值为准</span><br><span class="line">                    esModule:false, &#x2F;&#x2F;关闭es6模块化</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;, &#x2F;&#x2F;[hash:10] 取hash值前10位 [ext]取原文件的扩展名</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.html$&#x2F;,</span><br><span class="line">                loader:&#39;html-loader&#39; &#x2F;&#x2F;处理html文件的直接标签引入的img图片，负责引入img，从而被url-loader处理</span><br><span class="line">                &#x2F;&#x2F; html-loader打包引入的默认时commonJs，而url-loader是es6模块化解析，后者解析式会出现[object,Module]问题，需要在上面options内进行设置</span><br><span class="line">                &#x2F;&#x2F;会打包形成efb6d509211981c64fa83c8fadf09425.png的图片名，可在上面设置name</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template:&#39;.&#x2F;src&#x2F;index.html&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;运行后发现出现Error: Cannot find module &#39;less&#39;</span><br><span class="line">&#x2F;&#x2F;安装npm install less --save-dev后重新运行即可</span><br><span class="line">&#x2F;&#x2F;loader都需要下载 npm i xx-loader -D</span><br></pre></td></tr></table></figure><h4 id="打包其他资源"><a href="#打包其他资源" class="headerlink" title="打包其他资源"></a>打包其他资源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;built.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[&#39;style-loader&#39;,&#39;css-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;打包其他资源（除html&#x2F;js&#x2F;css以外的资源）</span><br><span class="line">            &#123;</span><br><span class="line">                exclude:&#x2F;\.(html|css|js|less|jpg|png|gif)$&#x2F;</span><br><span class="line">                loader:&#39;file-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: &quot;.&#x2F;src&#x2F;index.html&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="devServer"><a href="#devServer" class="headerlink" title="devServer"></a>devServer</h5><p>开发服务器devServer：用来自动化-自动编译，自动打开浏览器，自动刷新</p><p>特点：在内存中编译打包，不会有输出(build文件没有打包后的输出文件)</p><p>下载：npm i webpack-dev-server -D</p><p>运行：npx webpack-dev-server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">const &#123;resolve&#125; &#x3D; require(&#39;path&#39;);</span><br><span class="line">const HtmlWebpackPlugin &#x3D; require(&#39;html-webpack-plugin&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry:&#39;.&#x2F;src&#x2F;index.js&#39;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:&#39;built.js&#39;,</span><br><span class="line">        path:resolve(__dirname,&#39;build&#39;)</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:&#x2F;\.css$&#x2F;,</span><br><span class="line">                use:[&#39;style-loader&#39;,&#39;css-loader&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;打包其他资源（除html&#x2F;js&#x2F;css以外的资源）</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;排除css&#x2F;html&#x2F;html资源，就会默认处理其他资源</span><br><span class="line">                exclude:&#x2F;\.(html|js|css)$&#x2F;,</span><br><span class="line">                loader:&#39;file-loader&#39;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    name:&#39;[hash:10].[ext]&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: &quot;.&#x2F;src&#x2F;index.html&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    mode:&#39;development&#39;,</span><br><span class="line">    devServe:&#123;</span><br><span class="line">        &#x2F;&#x2F;项目构建后的路径</span><br><span class="line">        contentBase:resolve(__dirname,&#39;build&#39;),</span><br><span class="line">        &#x2F;&#x2F;启动gzip压缩</span><br><span class="line">        compress:true,</span><br><span class="line">        &#x2F;&#x2F;端口号</span><br><span class="line">        port:3000,</span><br><span class="line">        &#x2F;&#x2F;开启自动打开浏览器</span><br><span class="line">        open:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于浏览器不能识别less等预处理器、es6等更高的语法，所以需要一些工具编译成浏览器能识别的语法，这些一个个小工具分开维护比较麻烦，这个时候前端提出一种构建工具，它包含许多个小工具，webpack就是构建工具的一种。&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://tanchuchu.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>笔记标题</title>
    <link href="http://tanchuchu.github.io/posts/24974/"/>
    <id>http://tanchuchu.github.io/posts/24974/</id>
    <published>2020-09-18T14:00:00.000Z</published>
    <updated>2020-11-03T15:22:19.495Z</updated>
    
    <content type="html"><![CDATA[<p>这里是简介！！！！！！！！</p><a id="more"></a><h3 id="标题一-h3"><a href="#标题一-h3" class="headerlink" title="标题一(h3)"></a>标题一(h3)</h3><h4 id="二级标题-（h4）"><a href="#二级标题-（h4）" class="headerlink" title="二级标题 （h4）"></a>二级标题 （h4）</h4><ol><li>这里是有序列表1</li><li>这里是有序列表2</li></ol><ul><li>这里是无序列表1</li><li>这里是无序列表2</li></ul><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p><a href="https://www.runoob.com/markdown/md-paragraph.html">这是一个链接（Markdown教程）</a></p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p><img src="https://file.iviewui.com/asd/asd-pro-3.png" alt="这是一个图片"></p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">'张三'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里是简介！！！！！！！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="后台管理" scheme="http://tanchuchu.github.io/categories/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="js" scheme="http://tanchuchu.github.io/tags/js/"/>
    
      <category term="vue" scheme="http://tanchuchu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>加密文章测试</title>
    <link href="http://tanchuchu.github.io/posts/7e709353/"/>
    <id>http://tanchuchu.github.io/posts/7e709353/</id>
    <published>2020-01-21T02:14:11.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="不好意思，密码没对哦，在检查检查呢！" data-whm="不好意思，信息无法验证！">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">嗨，请准确无误地输入密码查看哟（密码：123456）！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7c9df5696499b0943b0714a90278edc9cdb12f7962c2949648214eee27e824eb">42401e656a30ed09e8e3b0fbe2fbd18ae1b8c2138de0b629bd1233cbc0cc80918b020088b54c79621b8ef9a9af7b0f06b4f358e8c86ef99d097fb161589581b453752da7da2e21aa4d35b94c835c62d1204ab327d5d9241d6be3c6b4b1e68d3697229826ffa52b53920e92cbe496af209269f803aa7450ba136338b0e891ba54f6fe48d0d23c1ba5b981305fdee3badd054b7ad20712af650adf010b25c3fa117b769979c2ef7a2ccccee14b24ed84530b911e7b68c43d9f4592ba8687b2c7fb</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      咦，这是一篇加密文章，好像需要输入密码才能查看呢！
    
    </summary>
    
    
      <category term="private" scheme="http://tanchuchu.github.io/categories/private/"/>
    
    
      <category term="加密文章" scheme="http://tanchuchu.github.io/tags/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>不蒜子统计常见问题</title>
    <link href="http://tanchuchu.github.io/posts/89986481/"/>
    <id>http://tanchuchu.github.io/posts/89986481/</id>
    <published>2019-12-21T00:46:08.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>不蒜子统计官网：<a href="http://busuanzi.ibruce.info/">http://busuanzi.ibruce.info/</a></p><p>详细使用教程：<a href="http://ibruce.info/2015/04/04/busuanzi/">http://ibruce.info/2015/04/04/busuanzi/</a></p><p>目前支持的功能：（两行代码，搞定计数；方便、简洁、实用）</p><p>a、显示站点总访问量</p><p>b、显示单页面访问量</p><a id="more"></a><p>c、显示站点总访问量和单页面访问量</p><p>d、只计数不显示</p><p>关于怎么实现当天、昨天、本月、上月（即具体时间段）的访问量目前没有支持，请配合目前不蒜子支持的功能自行实现。</p><h3 id="1-常见问题400错误，统计不生效"><a href="#1-常见问题400错误，统计不生效" class="headerlink" title="1.常见问题400错误，统计不生效"></a>1.常见问题400错误，统计不生效</h3><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085006.png" alt="">            </p><p>如图<strong>（1）</strong>的地方没有加载出统计数据</p><p>此时F12打开浏览器控制台，找到<strong>（2）</strong>network地方，刷新一下页面找到<strong>（3）</strong>，请求统计的网址如图所示，查看<strong>（4）</strong>referrer-policy是否如图所示，如图的话是不能访问的，需要更改。</p><p><strong>导致此问题原因</strong>，检查网页源码中，一般header有如下标签</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085114.png" alt="">    </p><p><strong>解决方法</strong>，去掉此标签，之后访问如下<strong>（1）</strong>已有统计值，<strong>（2）</strong>已改变。可详细对比正常使用不蒜子统计网址<a href="https://removeif.github.io/">https://removeif.github.io/</a> 中请求<strong>busuanzi?jsonpCallback=BusuanziCallback_236107382952地址</strong>的请求和返回参数的差异！</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085231.png" alt=""></p><p><strong>这样设置带来的影响</strong>，可能有些图床的图片不能显示，会图裂，如新浪图床。解决方法，可以用其他不冲突的图床。</p><h3 id="2-统计访问数巨大（清零问题）"><a href="#2-统计访问数巨大（清零问题）" class="headerlink" title="2.统计访问数巨大（清零问题）"></a>2.统计访问数巨大（清零问题）</h3><p><a href="http://localhost:4000/">http://localhost:4000/</a> 或<a href="http://127.0.0.1:4000/">http://127.0.0.1:4000/</a> 访问时，统计数巨大，这是正常的，不用清零。部署到线上，用线上域名网址访问数据就正常了。</p><h3 id="3-统计无法访问如图所示"><a href="#3-统计无法访问如图所示" class="headerlink" title="3.统计无法访问如图所示"></a>3.统计无法访问如图所示</h3><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085258.png" alt=""></p><p>查看红色url部分如下所示</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085320.png" alt=""></p><p>此问题是Request URL填写错误，请确保Request URL前部分为<a href="http://busuanzi.ibruce.info/busuanzi?"><strong>http://busuanzi.ibruce.info/busuanzi?</strong></a><strong>，，，，如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085345.png" alt=""></p><p>同时查看Response，出现如下数据，就是成功访问了不蒜子统计，如果网站中还没出统计数据，就是自己的代码写错了，检查代码</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085405.png" alt=""></p><h3 id="4-其余问题"><a href="#4-其余问题" class="headerlink" title="4.其余问题"></a>4.其余问题</h3><p><strong>(1)</strong>.同一个页面，同名的id标签确保只能放一个如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span> <span class="attr">style</span>=<span class="string">"display: inline;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同一个页面id名为busuanzi_value_site_uv只能放一个!</p><p><strong>(2)</strong>.safari（包括移动端的safari）浏览器页面pv统计问题，如下，因为Safari浏览器referer在文章页面时也上送的域名（而单个页面的pv统计是根据页面路径，即上送的referer），所以此时页面的pv返回的站点的pv值。暂时没解决方法，可自行搜索解决方案构造正确的referer值。对于此问题可以换个浏览器看哇，比如Chrome，哈哈。</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085514.png" alt=""></p><p><strong>(3)</strong>.部分live2d可能与不蒜子统计有冲突，出现此问题时，请查看网页源码引用统计id处是否被隐藏，一般网页上会自动加上display: none;自行选择性的使用。网友的解决方法，修改源码为以下，并引用修改后的js文件</p><p>不蒜子源码文件：</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191221085823.png" alt=""></p><p> 修改为如下：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">var bszCaller, bszTag;</span><br><span class="line"><span class="addition">!function() &#123;</span></span><br><span class="line">    var c, d, e, a = !1, b = [];</span><br><span class="line">    ready = function(c) &#123;</span><br><span class="line">        return a || "interactive" <span class="comment">=== document.readyState || "complete" === document.readyState ? c.call(document) : b.push(function() &#123;</span></span><br><span class="line">            return c.call(this)</span><br><span class="line">        &#125;),</span><br><span class="line">        this</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    d = function() &#123;</span><br><span class="line">        for (var a = 0, c = b.length; c &gt; a; a++)</span><br><span class="line">            b[a].apply(document);</span><br><span class="line">        b = []</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    e = function() &#123;</span><br><span class="line">        a || (a = !0,</span><br><span class="line">        d.call(window),</span><br><span class="line">        document.removeEventListener ? document.removeEventListener("DOMContentLoaded", e, !1) : document.attachEvent &amp;&amp; (document.detachEvent("onreadystatechange", e),</span><br><span class="line">        window == window.top &amp;&amp; (clearInterval(c),</span><br><span class="line">        c = null)))</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    document.addEventListener ? document.addEventListener("DOMContentLoaded", e, !1) : document.attachEvent &amp;&amp; (document.attachEvent("onreadystatechange", function() &#123;</span><br><span class="line">        /loaded|complete/.test(document.readyState) &amp;&amp; e()</span><br><span class="line">    &#125;),</span><br><span class="line">    window == window.top &amp;&amp; (c = setInterval(function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            a || document.documentElement.doScroll("left")</span><br><span class="line">        &#125; catch (b) &#123;</span><br><span class="line">            return</span><br><span class="line">        &#125;</span><br><span class="line">        e()</span><br><span class="line">    &#125;, 5)))</span><br><span class="line">&#125;(),</span><br><span class="line">bszCaller = &#123;</span><br><span class="line">    fetch: function(a, b) &#123;</span><br><span class="line">        var c = "BusuanziCallback_" + Math.floor(1099511627776 * Math.random());</span><br><span class="line">        window[c] = this.evalCall(b),</span><br><span class="line">        a = a.replace("=BusuanziCallback", "=" + c),</span><br><span class="line">        scriptTag = document.createElement("SCRIPT"),</span><br><span class="line">        scriptTag.type = "text/javascript",</span><br><span class="line">        scriptTag.defer = !0,</span><br><span class="line">        scriptTag.src = a,</span><br><span class="line">        document.getElementsByTagName("HEAD")[0].appendChild(scriptTag)</span><br><span class="line">    &#125;,</span><br><span class="line">    evalCall: function(a) &#123;</span><br><span class="line">        return function(b) &#123;</span><br><span class="line">            ready(function() &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    a(b), </span><br><span class="line"><span class="deletion">-                      // 此处为修改的逻辑</span></span><br><span class="line"><span class="deletion">-                      scriptTag.parentElement.removeChild(scriptTag)</span></span><br><span class="line"><span class="addition">+                      if(scriptTag != null &amp;&amp; scriptTag.parentElement != null)&#123;</span></span><br><span class="line"><span class="addition">+                       scriptTag.parentElement.removeChild(scriptTag)</span></span><br><span class="line"><span class="addition">+                      &#125;</span></span><br><span class="line">                &#125; catch (c) &#123;</span><br><span class="line">                    bszTag.hides()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">bszCaller.fetch("//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback", function(a) &#123;</span><br><span class="line">    bszTag.texts(a),</span><br><span class="line">    bszTag.shows()</span><br><span class="line">&#125;),</span><br><span class="line">bszTag = &#123;</span><br><span class="line">    bszs: ["site_pv", "page_pv", "site_uv"],</span><br><span class="line">    texts: function(a) &#123;</span><br><span class="line">        this.bszs.map(function(b) &#123;</span><br><span class="line">            var c = document.getElementById("busuanzi_value_" + b);</span><br><span class="line">            c &amp;&amp; (c.innerHTML = a[b])</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    hides: function() &#123;</span><br><span class="line">        this.bszs.map(function(a) &#123;</span><br><span class="line">            var b = document.getElementById("busuanzi_container_" + a);</span><br><span class="line">            b &amp;&amp; (b.style.display = "none")</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    shows: function() &#123;</span><br><span class="line">        this.bszs.map(function(a) &#123;</span><br><span class="line">            var b = document.getElementById("busuanzi_container_" + a);</span><br><span class="line">            b &amp;&amp; (b.style.display = "inline")</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-官方群！！！"><a href="#5-官方群！！！" class="headerlink" title="5.官方群！！！"></a>5.官方群！！！</h3><p>群号：419260983，有其余问题进群讨论，<strong>提问时遇到其他的问题请同时发出问题的在线网址！！！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不蒜子统计官网：&lt;a href=&quot;http://busuanzi.ibruce.info/&quot;&gt;http://busuanzi.ibruce.info/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详细使用教程：&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot;&gt;http://ibruce.info/2015/04/04/busuanzi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前支持的功能：（两行代码，搞定计数；方便、简洁、实用）&lt;/p&gt;
&lt;p&gt;a、显示站点总访问量&lt;/p&gt;
&lt;p&gt;b、显示单页面访问量&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具教程" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"/>
    
      <category term="博客统计插件" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E5%8D%9A%E5%AE%A2%E7%BB%9F%E8%AE%A1%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="博客统计插件" scheme="http://tanchuchu.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%9F%E8%AE%A1%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>github Issue 作为博客微型数据库的应用</title>
    <link href="http://tanchuchu.github.io/posts/e7fe3cc/"/>
    <id>http://tanchuchu.github.io/posts/e7fe3cc/</id>
    <published>2019-11-28T14:02:05.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>众所周知，对于hexo框架搭建的静态博客，难免会产生一些动态的数据，比如一些碎碎念、友链、音乐、时间轴等微型数据。目前一般的做法:</p><p>a.是创建一个json数据，来存储这些微型数据，但是如果数据太多的话，一是比较慢，二是有个硬伤问题，就是json数据不能分页请求，只能一次拿完，太多的话网络带宽占用太多。</p><a id="more"></a><p>b.或者有的直接后台写一些接口服务啥的，还得在买个服务器部署上去，然后博客中访问接口。</p><p>c.或者有些可能就直接写到html中。</p><p>对于a、c方法都比较麻烦，每次更新了都要编译部署，不能很方便的动态更新。对于b的话，成本以及技术要求可能就更多一些了。</p><p>基于上面出现的问题，目前想到的一个解决方案就是，利用github 的issue作为一个微型数据库。能够很方便的动态更新，也能分页，也不需要啥json文件，想想都很方便。</p><h3 id="issue数据库使用步骤"><a href="#issue数据库使用步骤" class="headerlink" title="issue数据库使用步骤"></a>issue数据库使用步骤</h3><h4 id="issue的创建"><a href="#issue的创建" class="headerlink" title="issue的创建"></a>issue的创建</h4><p>先创建一个Repository，对于此Repository可以专门作为微型的数据库，取名issue_database。创建好之后建立一些issue</p><p>如下所示</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191128213154.png" alt=""></p><p>目前博客中，所有的动态数据都放到issue中了。</p><h4 id="issue中存储数据"><a href="#issue中存储数据" class="headerlink" title="issue中存储数据"></a>issue中存储数据</h4><p>对于创建好的issue，就可以往里面写数据了，比如我的友链数据为issue：blog_friends</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191128213427.png" alt=""></p><p>对于issue中存储的数据最好存json格式的，因为可以方便后面取出来使用。存储好数据后，如果太多的话，可以点击hide,隐藏起来。同时这个issue最好给<code>Lock conversation</code>这样的好处是，防止别人往里面加些脏数据，只能自己往里写数据。哈哈，一般也没有闲的无聊的网友恶作剧。这样就存储好数据了。</p><h4 id="博客中获取issue数据"><a href="#博客中获取issue数据" class="headerlink" title="博客中获取issue数据"></a>博客中获取issue数据</h4><p>博客中通过js获取issue中的数据，以博客友链为例，以下是获取代码，以及处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// author by removef</span></span><br><span class="line"><span class="comment">// https://removeif.github.io/</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//获取处理友链数据，来自issue，一次取完</span></span><br><span class="line">    $.getJSON(<span class="string">"https://api.github.com/repos/removeif/issue_database/issues/2/comments?per_page=100&amp;client_id=46a9f3481b46ea0129d8&amp;client_secret=79c7c9cb847e141757d7864453bcbf89f0655b24"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">source</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = [];</span><br><span class="line">        <span class="keyword">var</span> source1;</span><br><span class="line">        source1 = source;</span><br><span class="line">      <span class="comment">// 以后每次更新的都在后面，此处倒序，按时间降序排</span></span><br><span class="line">        source1.reverse();</span><br><span class="line">      <span class="comment">// 把所有的数据放到data的列表中</span></span><br><span class="line">        $.each(source1, <span class="function"><span class="keyword">function</span> (<span class="params">i, e</span>) </span>&#123;</span><br><span class="line">            data.push(...JSON.parse(e.body));</span><br><span class="line">        &#125;);</span><br><span class="line">      </span><br><span class="line">        $.each(data, <span class="function"><span class="keyword">function</span> (<span class="params">i, e</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 博客中html文件的构建，渲染</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面代码中client_id、client_secret在另一篇文章中<strong><a href="https://removeif.github.io/2019/09/19/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html">博客源码分享</a></strong>有详细的说明,可以查看一下。这样就能获取到相应的数据，进行操作。</p><h4 id="issue数据的更新"><a href="#issue数据的更新" class="headerlink" title="issue数据的更新"></a>issue数据的更新</h4><p>比如想更新任意一项数据都可以进github中对应的仓库的issue下进行更新，添加。然后实时去博客中查看。</p><h3 id="扩展一下"><a href="#扩展一下" class="headerlink" title="扩展一下"></a>扩展一下</h3><p>对于有些爱唠叨的人（比如我），弄个类似碎碎念的东西就比较实用了。之前想过各种方案，存json数据太不方便；后台写个服务部署服务器也太麻烦。最后思来想去还是利用了下现成的优秀项目<a href="https://github.com/gitalk/gitalk">gitalk</a>,稍稍改改就能很好使用。</p><h4 id="博客中的碎碎念"><a href="#博客中的碎碎念" class="headerlink" title="博客中的碎碎念"></a>博客中的碎碎念</h4><p>对于博主而言，有发表框和修改的操作，能够方便发表和修改。</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191128215148.png" alt=""></p><p>可能有时候还会发表一些图片，对图片的样式做了一些控制</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191128215345.png" alt=""></p><p>对于网友的话只能查看以及点赞加❤️</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20191128215555.png" alt=""></p><p>做法就是源码中改下返回html的文件内容，如果是管理员和非管理员返回一些不同的元素，能够很好的实现碎碎念的功能。<br>查看<a href="https://removeif.github.io/self-talking/">碎碎念</a>。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>静态博客的动态数据是个痛点，GitHub Issue有很多可利用的地方。多去探索发掘其中的奥妙。</p><p>利用GitHub Issue来解决目前也是一种解决方法。希望后面会出现更好的解决方案。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;众所周知，对于hexo框架搭建的静态博客，难免会产生一些动态的数据，比如一些碎碎念、友链、音乐、时间轴等微型数据。目前一般的做法:&lt;/p&gt;
&lt;p&gt;a.是创建一个json数据，来存储这些微型数据，但是如果数据太多的话，一是比较慢，二是有个硬伤问题，就是json数据不能分页请求，只能一次拿完，太多的话网络带宽占用太多。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具教程" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"/>
    
      <category term="主题工具" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E4%B8%BB%E9%A2%98%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具教程" scheme="http://tanchuchu.github.io/tags/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>中华人民共和国国旗法</title>
    <link href="http://tanchuchu.github.io/posts/79e097c3/"/>
    <id>http://tanchuchu.github.io/posts/79e097c3/</id>
    <published>2019-10-10T12:06:34.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>基本信息</p></blockquote><p>发文字号：主席令第18号</p><p>效力级别：法律</p><p>时效性：现行有效</p><p>发布日期：2009-08-27</p><p>实施日期：2009-08-27</p><p>发布机关：全国人大常委会</p><a id="more"></a><blockquote><p>法律修订</p></blockquote><p>1990年6月28日第七届全国人民代表大会常务委员会第十四次会议通过</p><p>1990年6月28日中华人民共和国主席令第28号公布</p><p>自1990年10月1日起施行</p><p>根据2009年8月27日第十一届全国人民代表大会常务委员会第十次会议通过的《全国人民代表大会常务委员会关于修改部分法律的决定》修正</p><p><a href="https://duxiaofa.baidu.com/detail?cid=1139334df8eb851acbcbedcb99f204d1_law&searchType=statute">中华人民共和国国旗法（1990修正）</a></p><blockquote><p>正文</p></blockquote><p><strong>第一条</strong></p><p>为了维护国旗的尊严，增强公民的国家观念，发扬爱国主义精神，根据宪法，制定本法。</p><p><strong>第二条</strong></p><p>中华人民共和国国旗是五星红旗。 中华人民共和国国旗按照中国人民政治协商会议第一届全体会议主席团公布的国旗制法说明制作。</p><p><strong>第三条</strong></p><p>中华人民共和国国旗是中华人民共和国的象征和标志。 每个公民和组织，都应当尊重和爱护国旗。</p><p><strong>第四条</strong></p><p>地方各级人民政府对本行政区域内国旗的升挂和使用，实施监督管理。 外交部、国务院交通主管部门、中国人民解放军总政治部对各自管辖范围内国旗的升挂和使用，实施监督管理。 国旗由省、自治区、直辖市的人民政府指定的企业制作。</p><p><strong>第五条</strong></p><p>下列场所或者机构所在地，应当每日升挂国旗： </p><ul><li>（一）北京天安门广场、新华门； </li><li>（二）全国人民代表大会常务委员会，国务院，中央军事委员会，最高人民法院，最高人民检察院； 中国人民政治协商会议全国委员会； </li><li>（三）外交部；</li><li>（四）出境入境的机场、港口、火车站和其他边境口岸，边防海防哨所。</li></ul><p><strong>第六条</strong></p><p>国务院各部门，地方各级人民代表大会常务委员会、人民政府、人民法院、人民检察院，中国人民政治协商会议地方各级委员会，应当在工作日升挂国旗。 全日制学校，除寒假、暑假和星期日外，应当每日升挂国旗。</p><p><strong>第七条</strong></p><p>国庆节、国际劳动节、元旦和春节，各级国家机关和各人民团体应当升挂国旗；企业事业组织，村民委员会、居民委员会，城镇居民院（楼）以及广场、公园等公共活动场所，有条件的可以升挂国旗。 不以春节为传统节日的少数民族地区，春节是否升挂国旗，由民族自治地方的自治机关规定。 民族自治地方在民族自治地方成立纪念日和主要传统民族节日，可以升挂国旗。</p><p><strong>第八条</strong></p><p>举行重大庆祝、纪念活动，大型文化、体育活动，大型展览会，可以升挂国旗。</p><p><strong>第九条</strong></p><p>外交活动以及国家驻外使馆领馆和其他外交代表机构升挂、使用国旗的办法，由外交部规定。</p><p><strong>第十条</strong></p><p>军事机关、军队营区、军用舰船，按照中央军事委员会的有关规定升挂国旗。</p><p><strong>第十一条</strong></p><p>民用船舶和进入中国领水的外国船舶升挂国旗的办法，由国务院交通主管部门规定。 公安部门执行边防、治安、消防任务的船舶升挂国旗的办法，由国务院公安部门规定。</p><p><strong>第十二条</strong></p><p>依照本法第五条、第六条、第七条的规定升挂国旗的，应当早晨升起，傍晚降下。 依照本法规定应当升挂国旗的，遇有恶劣天气，可以不升挂。</p><p><strong>第十三条</strong></p><p>升挂国旗时，可以举行升旗仪式。 举行升旗仪式时，在国旗升起的过程中，参加者应当面向国旗肃立致敬，并可以奏国歌或者唱国歌。 全日制中学小学，除假期外，每周举行一次升旗仪式。</p><p><strong>第十四条</strong></p><p>下列人士逝世，下半旗志哀： </p><ul><li>（一）中华人民共和国主席、全国人民代表大会常务委员会委员长、国务院总理、中央军事委员会主席；</li><li>（二）中国人民政治协商会议全国委员会主席； </li><li>（三）对中华人民共和国作出杰出贡献的人； </li><li>（四）对世界和平或者人类进步事业作出杰出贡献的人。 发生特别重大伤亡的不幸事件或者严重自然灾害造成重大伤亡时，可以下半旗志哀。 依照本条第一款（三）、（四）项和第二款的规定下半旗，由国务院决定。 依照本条规定下半旗的日期和场所，由国家成立的治丧机构或者国务院决定。</li></ul><p><strong>第十五条</strong></p><p>升挂国旗，应当将国旗置于显著的位置。 列队举持国旗和其他旗帜行进时，国旗应当在其他旗帜之前。 国旗与其他旗帜同时升挂时，应当将国旗置于中心、较高或者突出的位置。 在外事活动中同时升挂两个以上国家的国旗时，应当按照外交部的规定或者国际惯例升挂。</p><p><strong>第十六条</strong></p><p>在直立的旗杆上升降国旗，应当徐徐升降。升起时，必须将国旗升至杆顶；降下时，不得使国旗落地。 下半旗时，应当先将国旗升至杆顶，然后降至旗顶与杆顶之间的距离为旗杆全长的三分之一处；降下时，应当先将国旗升至杆顶，然后再降下。</p><p><strong>第十七条</strong></p><p>不得升挂破损、污损、褪色或者不合规格的国旗。</p><p><strong>第十八条</strong></p><p>国旗及其图案不得用作商标和广告，不得用于私人丧事活动。</p><p><strong>第十九条</strong></p><p>在公共场合故意以焚烧、毁损、涂划、玷污、践踏等方式侮辱中华人民共和国国旗的，依法追究刑事责任；情节较轻的，由公安机关处以十五日以下拘留。</p><p><strong>第二十条</strong></p><p>本法自1990年10月1日起施行。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;基本信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发文字号：主席令第18号&lt;/p&gt;
&lt;p&gt;效力级别：法律&lt;/p&gt;
&lt;p&gt;时效性：现行有效&lt;/p&gt;
&lt;p&gt;发布日期：2009-08-27&lt;/p&gt;
&lt;p&gt;实施日期：2009-08-27&lt;/p&gt;
&lt;p&gt;发布机关：全国人大常委会&lt;/p&gt;
    
    </summary>
    
    
      <category term="法律" scheme="http://tanchuchu.github.io/categories/%E6%B3%95%E5%BE%8B/"/>
    
    
      <category term="法律" scheme="http://tanchuchu.github.io/tags/%E6%B3%95%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>中华人民共和国宪法</title>
    <link href="http://tanchuchu.github.io/posts/bdeb1d7c/"/>
    <id>http://tanchuchu.github.io/posts/bdeb1d7c/</id>
    <published>2019-10-10T10:34:50.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>基本信息</p></blockquote><p>发文字号：全国人民代表大会公告第1号</p><p>效力级别：法律</p><p>时效性：现行有效</p><p>发布日期：2018-03-11</p><p>实施日期：2018-03-11</p><p>发布机关：全国人民代表大会</p><a id="more"></a><blockquote><p>法律修订</p></blockquote><p>1982年12月4日第五届全国人民代表大会第五次会议通过</p><p>1982年12月4日全国人民代表大会公告公布施行</p><p>根据1988年4月12日第七届全国人民代表大会第一次会议通过的《中华人民共和国宪法修正案》、1993年3月29日第八届全国人民代表大会第一次会议通过的《中华人民共和国宪法修正案》、1999年3月15日第九届全国人民代表大会第二次会议通过的《中华人民共和国宪法修正案》、2004年3月14日第十届全国人民代表大会第二次会议通过的《中华人民共和国宪法修正案》和2018年3月11日第十三届全国人民代表大会第一次会议通过的《中华人民共和国宪法修正案》修正</p><p><a href="https://duxiaofa.baidu.com/detail?cid=4ae984b229f129c11435f0e21b79216f_law&searchType=statute">中华人民共和国宪法（2004修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=426729c34e27920ac1a13f0cce96a7a0_law&searchType=statute">中华人民共和国宪法（1999修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=73926d1917cb99ffb2212eaf1de0f2eb_law&searchType=statute">中华人民共和国宪法（1993修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=c750ece3ea316f67896b820b0263442e_law&searchType=statute">中华人民共和国宪法（1982修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=18af662e80b7e2200e6e742f3dce89e9_law&searchType=statute">中华人民共和国宪法（1978修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=dc14cc1823e64a4f1d035a854bcce923_law&searchType=statute">中华人民共和国宪法（1975修正）</a></p><p><a href="https://duxiaofa.baidu.com/detail?cid=58052ed400053cf3c9c99890164f83d3_law&searchType=statute">中华人民共和国宪法（1954修正）</a></p><blockquote><p>正文</p></blockquote><h3 id="序-言"><a href="#序-言" class="headerlink" title="序　　言"></a>序　　言</h3><p>中国是世界上历史最悠久的国家之一。中国各族人民共同创造了光辉灿烂的文化，具有光荣的革命传统。<br>一八四〇年以后，封建的中国逐渐变成半殖民地、半封建的国家。中国人民为国家独立、民族解放和民主自由进行了前仆后继的英勇奋斗。<br>二十世纪，中国发生了翻天覆地的伟大历史变革。<br>一九一一年孙中山先生领导的辛亥革命，废除了封建帝制，创立了中华民国。但是，中国人民反对帝国主义和封建主义的历史任务还没有完成。<br>一九四九年，以毛泽东主席为领袖的中国共产党领导中国各族人民，在经历了长期的艰难曲折的武装斗争和其他形式的斗争以后，终于推翻了帝国主义、封建主义和官僚资本主义的统治，取得了新民主主义革命的伟大胜利，建立了中华人民共和国。从此，中国人民掌握了国家的权力，成为国家的主人。<br>中华人民共和国成立以后，我国社会逐步实现了由新民主主义到社会主义的过渡。生产资料私有制的社会主义改造已经完成，人剥削人的制度已经消灭，社会主义制度已经确立。工人阶级领导的、以工农联盟为基础的人民民主专政，实质上即无产阶级专政，得到巩固和发展。中国人民和中国人民解放军战胜了帝国主义、霸权主义的侵略、破坏和武装挑衅，维护了国家的独立和安全，增强了国防。经济建设取得了重大的成就，独立的、比较完整的社会主义工业体系已经基本形成，农业生产显著提高。教育、科学、文化等事业有了很大的发展，社会主义思想教育取得了明显的成效。广大人民的生活有了较大的改善。<br>中国新民主主义革命的胜利和社会主义事业的成就，是中国共产党领导中国各族人民，在马克思列宁主义、毛泽东思想的指引下，坚持真理，修正错误，战胜许多艰难险阻而取得的。我国将长期处于社会主义初级阶段。国家的根本任务是，沿着中国特色社会主义道路，集中力量进行社会主义现代化建设。中国各族人民将继续在中国共产党领导下，在马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想指引下，坚持人民民主专政，坚持社会主义道路，坚持改革开放，不断完善社会主义的各项制度，发展社会主义市场经济，发展社会主义民主，健全社会主义法治，贯彻新发展理念，自力更生，艰苦奋斗，逐步实现工业、农业、国防和科学技术的现代化，推动物质文明、政治文明、精神文明、社会文明、生态文明协调发展，把我国建设成为富强民主文明和谐美丽的社会主义现代化强国，实现中华民族伟大复兴。<br>在我国，剥削阶级作为阶级已经消灭，但是阶级斗争还将在一定范围内长期存在。中国人民对敌视和破坏我国社会主义制度的国内外的敌对势力和敌对分子，必须进行斗争。<br>台湾是中华人民共和国的神圣领土的一部分。完成统一祖国的大业是包括台湾同胞在内的全中国人民的神圣职责。<br>社会主义的建设事业必须依靠工人、农民和知识分子，团结一切可以团结的力量。在长期的革命、建设、改革过程中，已经结成由中国共产党领导的，有各民主党派和各人民团体参加的，包括全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一和致力于中华民族伟大复兴的爱国者的广泛的爱国统一战线，这个统一战线将继续巩固和发展。中国人民政治协商会议是有广泛代表性的统一战线组织，过去发挥了重要的历史作用，今后在国家政治生活、社会生活和对外友好活动中，在进行社会主义现代化建设、维护国家的统一和团结的斗争中，将进一步发挥它的重要作用。中国共产党领导的多党合作和政治协商制度将长期存在和发展。<br>中华人民共和国是全国各族人民共同缔造的统一的多民族国家。平等团结互助和谐的社会主义民族关系已经确立，并将继续加强。在维护民族团结的斗争中，要反对大民族主义，主要是大汉族主义，也要反对地方民族主义。国家尽一切努力，促进全国各民族的共同繁荣。<br>中国革命、建设、改革的成就是同世界人民的支持分不开的。中国的前途是同世界的前途紧密地联系在一起的。中国坚持独立自主的对外政策，坚持互相尊重主权和领土完整、互不侵犯、互不干涉内政、平等互利、和平共处的五项原则，坚持和平发展道路，坚持互利共赢开放战略，发展同各国的外交关系和经济、文化交流，推动构建人类命运共同体；坚持反对帝国主义、霸权主义、殖民主义，加强同世界各国人民的团结，支持被压迫民族和发展中国家争取和维护民族独立、发展民族经济的正义斗争，为维护世界和平和促进人类进步事业而努力。<br>本宪法以法律的形式确认了中国各族人民奋斗的成果，规定了国家的根本制度和根本任务，是国家的根本法，具有最高的法律效力。全国各族人民、一切国家机关和武装力量、各政党和各社会团体、各企业事业组织，都必须以宪法为根本的活动准则，并且负有维护宪法尊严、保证宪法实施的职责。</p><h3 id="第一章-总-纲"><a href="#第一章-总-纲" class="headerlink" title="第一章　总　　纲"></a>第一章　总　　纲</h3><p><strong>第一条</strong></p><p>中华人民共和国是工人阶级领导的、以工农联盟为基础的人民民主专政的社会主义国家。 社会主义制度是中华人民共和国的根本制度。中国共产党领导是中国特色社会主义最本质的特征。禁止任何组织或者个人破坏社会主义制度。</p><p><strong>第二条</strong></p><p>中华人民共和国的一切权力属于人民。 人民行使国家权力的机关是全国人民代表大会和地方各级人民代表大会。 人民依照法律规定，通过各种途径和形式，管理国家事务，管理经济和文化事业，管理社会事务。</p><p><strong>第三条</strong></p><p>中华人民共和国的国家机构实行民主集中制的原则。 全国人民代表大会和地方各级人民代表大会都由民主选举产生，对人民负责，受人民监督。 国家行政机关、监察机关、审判机关、检察机关都由人民代表大会产生，对它负责，受它监督。 中央和地方的国家机构职权的划分，遵循在中央的统一领导下，充分发挥地方的主动性、积极性的原则。</p><p><strong>第四条</strong></p><p>中华人民共和国各民族一律平等。国家保障各少数民族的合法的权利和利益，维护和发展各民族的平等团结互助和谐关系。禁止对任何民族的歧视和压迫，禁止破坏民族团结和制造民族分裂的行为。 国家根据各少数民族的特点和需要，帮助各少数民族地区加速经济和文化的发展。 各少数民族聚居的地方实行区域自治，设立自治机关，行使自治权。各民族自治地方都是中华人民共和国不可分离的部分。 各民族都有使用和发展自己的语言文字的自由，都有保持或者改革自己的风俗习惯的自由。</p><p><strong>第五条</strong></p><p>中华人民共和国实行依法治国，建设社会主义法治国家。 国家维护社会主义法制的统一和尊严。 一切法律、行政法规和地方性法规都不得同宪法相抵触。 一切国家机关和武装力量、各政党和各社会团体、各企业事业组织都必须遵守宪法和法律。一切违反宪法和法律的行为，必须予以追究。 任何组织或者个人都不得有超越宪法和法律的特权。</p><p><strong>第六条</strong></p><p>中华人民共和国的社会主义经济制度的基础是生产资料的社会主义公有制，即全民所有制和劳动群众集体所有制。社会主义公有制消灭人剥削人的制度，实行各尽所能、按劳分配的原则。 国家在社会主义初级阶段，坚持公有制为主体、多种所有制经济共同发展的基本经济制度，坚持按劳分配为主体、多种分配方式并存的分配制度。</p><p><strong>第七条</strong></p><p>国有经济，即社会主义全民所有制经济，是国民经济中的主导力量。国家保障国有经济的巩固和发展。</p><p><strong>第八条</strong></p><p>农村集体经济组织实行家庭承包经营为基础、统分结合的双层经营体制。农村中的生产、供销、信用、消费等各种形式的合作经济，是社会主义劳动群众集体所有制经济。参加农村集体经济组织的劳动者，有权在法律规定的范围内经营自留地、自留山、家庭副业和饲养自留畜。 城镇中的手工业、工业、建筑业、运输业、商业、服务业等行业的各种形式的合作经济，都是社会主义劳动群众集体所有制经济。 国家保护城乡集体经济组织的合法的权利和利益，鼓励、指导和帮助集体经济的发展。</p><p><strong>第九条</strong></p><p>矿藏、水流、森林、山岭、草原、荒地、滩涂等自然资源，都属于国家所有，即全民所有；由法律规定属于集体所有的森林和山岭、草原、荒地、滩涂除外。 国家保障自然资源的合理利用，保护珍贵的动物和植物。禁止任何组织或者个人用任何手段侵占或者破坏自然资源。</p><p><strong>第十条</strong></p><p>城市的土地属于国家所有。 农村和城市郊区的土地，除由法律规定属于国家所有的以外，属于集体所有；宅基地和自留地、自留山，也属于集体所有。 国家为了公共利益的需要，可以依照法律规定对土地实行征收或者征用并给予补偿。 任何组织或者个人不得侵占、买卖或者以其他形式非法转让土地。土地的使用权可以依照法律的规定转让。 一切使用土地的组织和个人必须合理地利用土地。</p><p><strong>第十一条</strong></p><p>在法律规定范围内的个体经济、私营经济等非公有制经济，是社会主义市场经济的重要组成部分。 国家保护个体经济、私营经济等非公有制经济的合法的权利和利益。国家鼓励、支持和引导非公有制经济的发展，并对非公有制经济依法实行监督和管理。</p><p><strong>第十二条</strong></p><p>社会主义的公共财产神圣不可侵犯。 国家保护社会主义的公共财产。禁止任何组织或者个人用任何手段侵占或者破坏国家的和集体的财产。</p><p><strong>第十三条</strong></p><p>公民的合法的私有财产不受侵犯。 国家依照法律规定保护公民的私有财产权和继承权。 国家为了公共利益的需要，可以依照法律规定对公民的私有财产实行征收或者征用并给予补偿。</p><p><strong>第十四条</strong></p><p>国家通过提高劳动者的积极性和技术水平，推广先进的科学技术，完善经济管理体制和企业经营管理制度，实行各种形式的社会主义责任制，改进劳动组织，以不断提高劳动生产率和经济效益，发展社会生产力。 国家厉行节约，反对浪费。 国家合理安排积累和消费，兼顾国家、集体和个人的利益，在发展生产的基础上，逐步改善人民的物质生活和文化生活。 国家建立健全同经济发展水平相适应的社会保障制度。</p><p><strong>第十五条</strong></p><p>国家实行社会主义市场经济。 国家加强经济立法，完善宏观调控。 国家依法禁止任何组织或者个人扰乱社会经济秩序。</p><p><strong>第十六条</strong></p><p>国有企业在法律规定的范围内有权自主经营。 国有企业依照法律规定，通过职工代表大会和其他形式，实行民主管理。</p><p><strong>第十七条</strong></p><p>集体经济组织在遵守有关法律的前提下，有独立进行经济活动的自主权。 集体经济组织实行民主管理，依照法律规定选举和罢免管理人员，决定经营管理的重大问题。</p><p><strong>第十八条</strong></p><p>中华人民共和国允许外国的企业和其他经济组织或者个人依照中华人民共和国法律的规定在中国投资，同中国的企业或者其他经济组织进行各种形式的经济合作。 在中国境内的外国企业和其他外国经济组织以及中外合资经营的企业，都必须遵守中华人民共和国的法律。它们的合法的权利和利益受中华人民共和国法律的保护。</p><p><strong>第十九条</strong></p><p>国家发展社会主义的教育事业，提高全国人民的科学文化水平。 国家举办各种学校，普及初等义务教育，发展中等教育、职业教育和高等教育，并且发展学前教育。 国家发展各种教育设施，扫除文盲，对工人、农民、国家工作人员和其他劳动者进行政治、文化、科学、技术、业务的教育，鼓励自学成才。 国家鼓励集体经济组织、国家企业事业组织和其他社会力量依照法律规定举办各种教育事业。 国家推广全国通用的普通话。</p><p><strong>第二十条</strong></p><p>国家发展自然科学和社会科学事业，普及科学和技术知识，奖励科学研究成果和技术发明创造。</p><p><strong>第二十一条</strong></p><p>国家发展医疗卫生事业，发展现代医药和我国传统医药，鼓励和支持农村集体经济组织、国家企业事业组织和街道组织举办各种医疗卫生设施，开展群众性的卫生活动，保护人民健康。 国家发展体育事业，开展群众性的体育活动，增强人民体质。</p><p><strong>第二十二条</strong></p><p>国家发展为人民服务、为社会主义服务的文学艺术事业、新闻广播电视事业、出版发行事业、图书馆博物馆文化馆和其他文化事业，开展群众性的文化活动。 国家保护名胜古迹、珍贵文物和其他重要历史文化遗产。</p><p><strong>第二十三条</strong></p><p>国家培养为社会主义服务的各种专业人才，扩大知识分子的队伍，创造条件，充分发挥他们在社会主义现代化建设中的作用。</p><p><strong>第二十四条</strong></p><p>国家通过普及理想教育、道德教育、文化教育、纪律和法制教育，通过在城乡不同范围的群众中制定和执行各种守则、公约，加强社会主义精神文明的建设。 国家倡导社会主义核心价值观，提倡爱祖国、爱人民、爱劳动、爱科学、爱社会主义的公德，在人民中进行爱国主义、集体主义和国际主义、共产主义的教育，进行辩证唯物主义和历史唯物主义的教育，反对资本主义的、封建主义的和其他的腐朽思想。</p><p><strong>第二十五条</strong></p><p>国家推行计划生育，使人口的增长同经济和社会发展计划相适应。</p><p><strong>第二十六条</strong></p><p>国家保护和改善生活环境和生态环境，防治污染和其他公害。 国家组织和鼓励植树造林，保护林木。</p><p><strong>第二十七条</strong></p><p>一切国家机关实行精简的原则，实行工作责任制，实行工作人员的培训和考核制度，不断提高工作质量和工作效率，反对官僚主义。 一切国家机关和国家工作人员必须依靠人民的支持，经常保持同人民的密切联系，倾听人民的意见和建议，接受人民的监督，努力为人民服务。 国家工作人员就职时应当依照法律规定公开进行宪法宣誓。</p><p><strong>第二十八条</strong></p><p>国家维护社会秩序，镇压叛国和其他危害国家安全的犯罪活动，制裁危害社会治安、破坏社会主义经济和其他犯罪的活动，惩办和改造犯罪分子。</p><p><strong>第二十九条</strong></p><p>中华人民共和国的武装力量属于人民。它的任务是巩固国防，抵抗侵略，保卫祖国，保卫人民的和平劳动，参加国家建设事业，努力为人民服务。 国家加强武装力量的革命化、现代化、正规化的建设，增强国防力量。</p><p><strong>第三十条</strong></p><p>中华人民共和国的行政区域划分如下： </p><ul><li>（一）全国分为省、自治区、直辖市； </li><li>（二）省、自治区分为自治州、县、自治县、市； </li><li>（三）县、自治县分为乡、民族乡、镇。 直辖市和较大的市分为区、县。自治州分为县、自治县、市。 自治区、自治州、自治县都是民族自治地方。</li></ul><p><strong>第三十一条</strong></p><p>国家在必要时得设立特别行政区。在特别行政区内实行的制度按照具体情况由全国人民代表大会以法律规定。</p><p><strong>第三十二条</strong></p><p>中华人民共和国保护在中国境内的外国人的合法权利和利益，在中国境内的外国人必须遵守中华人民共和国的法律。 中华人民共和国对于因为政治原因要求避难的外国人，可以给予受庇护的权利。</p><h3 id="第二章-公民的基本权利和义务"><a href="#第二章-公民的基本权利和义务" class="headerlink" title="第二章　公民的基本权利和义务"></a>第二章　公民的基本权利和义务</h3><p><strong>第三十三条</strong></p><p>凡具有中华人民共和国国籍的人都是中华人民共和国公民。 中华人民共和国公民在法律面前一律平等。 国家尊重和保障人权。 任何公民享有宪法和法律规定的权利，同时必须履行宪法和法律规定的义务。</p><p><strong>第三十四条</strong></p><p>中华人民共和国年满十八周岁的公民，不分民族、种族、性别、职业、家庭出身、宗教信仰、教育程度、财产状况、居住期限，都有选举权和被选举权；但是依照法律被剥夺政治权利的人除外。</p><p><strong>第三十五条</strong></p><p>中华人民共和国公民有言论、出版、集会、结社、游行、示威的自由。</p><p><strong>第三十六条</strong></p><p>中华人民共和国公民有宗教信仰自由。 任何国家机关、社会团体和个人不得强制公民信仰宗教或者不信仰宗教，不得歧视信仰宗教的公民和不信仰宗教的公民。 国家保护正常的宗教活动。任何人不得利用宗教进行破坏社会秩序、损害公民身体健康、妨碍国家教育制度的活动。 宗教团体和宗教事务不受外国势力的支配。</p><p><strong>第三十七条</strong></p><p>中华人民共和国公民的人身自由不受侵犯。 任何公民，非经人民检察院批准或者决定或者人民法院决定，并由公安机关执行，不受逮捕。 禁止非法拘禁和以其他方法非法剥夺或者限制公民的人身自由，禁止非法搜查公民的身体。</p><p><strong>第三十八条</strong></p><p>中华人民共和国公民的人格尊严不受侵犯。禁止用任何方法对公民进行侮辱、诽谤和诬告陷害。</p><p><strong>第三十九条</strong></p><p>中华人民共和国公民的住宅不受侵犯。禁止非法搜查或者非法侵入公民的住宅。</p><p><strong>第四十条</strong></p><p>中华人民共和国公民的通信自由和通信秘密受法律的保护。除因国家安全或者追查刑事犯罪的需要，由公安机关或者检察机关依照法律规定的程序对通信进行检查外，任何组织或者个人不得以任何理由侵犯公民的通信自由和通信秘密。</p><p><strong>第四十一条</strong></p><p>中华人民共和国公民对于任何国家机关和国家工作人员，有提出批评和建议的权利；对于任何国家机关和国家工作人员的违法失职行为，有向有关国家机关提出申诉、控告或者检举的权利，但是不得捏造或者歪曲事实进行诬告陷害。 对于公民的申诉、控告或者检举，有关国家机关必须查清事实，负责处理。任何人不得压制和打击报复。 由于国家机关和国家工作人员侵犯公民权利而受到损失的人，有依照法律规定取得赔偿的权利。</p><p><strong>第四十二条</strong></p><p>中华人民共和国公民有劳动的权利和义务。 国家通过各种途径，创造劳动就业条件，加强劳动保护，改善劳动条件，并在发展生产的基础上，提高劳动报酬和福利待遇。 劳动是一切有劳动能力的公民的光荣职责。国有企业和城乡集体经济组织的劳动者都应当以国家主人翁的态度对待自己的劳动。国家提倡社会主义劳动竞赛，奖励劳动模范和先进工作者。国家提倡公民从事义务劳动。 国家对就业前的公民进行必要的劳动就业训练。</p><p><strong>第四十三条</strong></p><p>中华人民共和国劳动者有休息的权利。 国家发展劳动者休息和休养的设施，规定职工的工作时间和休假制度。</p><p><strong>第四十四条</strong></p><p>国家依照法律规定实行企业事业组织的职工和国家机关工作人员的退休制度。退休人员的生活受到国家和社会的保障。</p><p><strong>第四十五条</strong></p><p>中华人民共和国公民在年老、疾病或者丧失劳动能力的情况下，有从国家和社会获得物质帮助的权利。国家发展为公民享受这些权利所需要的社会保险、社会救济和医疗卫生事业。 国家和社会保障残废军人的生活，抚恤烈士家属，优待军人家属。 国家和社会帮助安排盲、聋、哑和其他有残疾的公民的劳动、生活和教育。</p><p><strong>第四十六条</strong></p><p>中华人民共和国公民有受教育的权利和义务。 国家培养青年、少年、儿童在品德、智力、体质等方面全面发展。</p><p><strong>第四十七条</strong></p><p>中华人民共和国公民有进行科学研究、文学艺术创作和其他文化活动的自由。国家对于从事教育、科学、技术、文学、艺术和其他文化事业的公民的有益于人民的创造性工作，给以鼓励和帮助。</p><p><strong>第四十八条</strong></p><p>中华人民共和国妇女在政治的、经济的、文化的、社会的和家庭的生活等各方面享有同男子平等的权利。 国家保护妇女的权利和利益，实行男女同工同酬，培养和选拔妇女干部。</p><p><strong>第四十九条</strong></p><p>婚姻、家庭、母亲和儿童受国家的保护。 夫妻双方有实行计划生育的义务。 父母有抚养教育未成年子女的义务，成年子女有赡养扶助父母的义务。 禁止破坏婚姻自由，禁止虐待老人、妇女和儿童。</p><p><strong>第五十条</strong></p><p>中华人民共和国保护华侨的正当的权利和利益，保护归侨和侨眷的合法的权利和利益。</p><p><strong>第五十一条</strong></p><p>中华人民共和国公民在行使自由和权利的时候，不得损害国家的、社会的、集体的利益和其他公民的合法的自由和权利。</p><p><strong>第五十二条</strong></p><p>中华人民共和国公民有维护国家统一和全国各民族团结的义务。</p><p><strong>第五十三条</strong></p><p>中华人民共和国公民必须遵守宪法和法律，保守国家秘密，爱护公共财产，遵守劳动纪律，遵守公共秩序，尊重社会公德。</p><p><strong>第五十四条</strong></p><p>中华人民共和国公民有维护祖国的安全、荣誉和利益的义务，不得有危害祖国的安全、荣誉和利益的行为。</p><p><strong>第五十五条</strong></p><p>保卫祖国、抵抗侵略是中华人民共和国每一个公民的神圣职责。 依照法律服兵役和参加民兵组织是中华人民共和国公民的光荣义务。</p><p><strong>第五十六条</strong></p><p>中华人民共和国公民有依照法律纳税的义务。</p><h3 id="第三章-国家机构"><a href="#第三章-国家机构" class="headerlink" title="第三章　国家机构"></a>第三章　国家机构</h3><p><strong>第五十七条</strong></p><p>中华人民共和国全国人民代表大会是最高国家权力机关。它的常设机关是全国人民代表大会常务委员会。</p><p><strong>第五十八条</strong></p><p>全国人民代表大会和全国人民代表大会常务委员会行使国家立法权。</p><p><strong>第五十九条</strong></p><p>全国人民代表大会由省、自治区、直辖市、特别行政区和军队选出的代表组成。各少数民族都应当有适当名额的代表。 全国人民代表大会代表的选举由全国人民代表大会常务委员会主持。 全国人民代表大会代表名额和代表产生办法由法律规定。</p><p><strong>第六十条</strong></p><p>全国人民代表大会每届任期五年。 全国人民代表大会任期届满的两个月以前，全国人民代表大会常务委员会必须完成下届全国人民代表大会代表的选举。如果遇到不能进行选举的非常情况，由全国人民代表大会常务委员会以全体组成人员的三分之二以上的多数通过，可以推迟选举，延长本届全国人民代表大会的任期。在非常情况结束后一年内，必须完成下届全国人民代表大会代表的选举。</p><p><strong>第六十一条</strong></p><p>全国人民代表大会会议每年举行一次，由全国人民代表大会常务委员会召集。如果全国人民代表大会常务委员会认为必要，或者有五分之一以上的全国人民代表大会代表提议，可以临时召集全国人民代表大会会议。 全国人民代表大会举行会议的时候，选举主席团主持会议。</p><p><strong>第六十二条</strong></p><p>全国人民代表大会行使下列职权：  </p><ul><li>（一）修改宪法； </li><li>（二）监督宪法的实施； </li><li>（三）制定和修改刑事、民事、国家机构的和其他的基本法律； </li><li>（四）选举中华人民共和国主席、副主席； </li><li>（五）根据中华人民共和国主席的提名，决定国务院总理的人选；根据国务院总理的提名，决定国务院副总理、国务委员、各部部长、各委员会主任、审计长、秘书长的人选； </li><li>（六）选举中央军事委员会主席；根据中央军事委员会主席的提名，决定中央军事委员会其他组成人员的人选； </li><li>（七）选举国家监察委员会主任； </li><li>（八）选举最高人民法院院长； </li><li>（九）选举最高人民检察院检察长； </li><li>（十）审查和批准国民经济和社会发展计划和计划执行情况的报告； </li><li>（十一）审查和批准国家的预算和预算执行情况的报告； </li><li>（十二）改变或者撤销全国人民代表大会常务委员会不适当的决定； </li><li>（十三）批准省、自治区和直辖市的建置； </li><li>（十四）决定特别行政区的设立及其制度； </li><li>（十五）决定战争和和平的问题； </li><li>（十六）应当由最高国家权力机关行使的其他职权。</li></ul><p><strong>第六十三条</strong></p><p>全国人民代表大会有权罢免下列人员： </p><ul><li>（一）中华人民共和国主席、副主席； </li><li>（二）国务院总理、副总理、国务委员、各部部长、各委员会主任、审计长、秘书长； </li><li>（三）中央军事委员会主席和中央军事委员会其他组成人员； </li><li>（四）国家监察委员会主任； </li><li>（五）最高人民法院院长； </li><li>（六）最高人民检察院检察长。</li></ul><p><strong>第六十四条</strong></p><p>宪法的修改，由全国人民代表大会常务委员会或者五分之一以上的全国人民代表大会代表提议，并由全国人民代表大会以全体代表的三分之二以上的多数通过。 法律和其他议案由全国人民代表大会以全体代表的过半数通过。</p><p><strong>第六十五条</strong></p><p>全国人民代表大会常务委员会由下列人员组成： 委员长， 副委员长若干人， 秘书长， 委员若干人。 全国人民代表大会常务委员会组成人员中，应当有适当名额的少数民族代表。 全国人民代表大会选举并有权罢免全国人民代表大会常务委员会的组成人员。 全国人民代表大会常务委员会的组成人员不得担任国家行政机关、监察机关、审判机关和检察机关的职务。</p><p><strong>第六十六条</strong></p><p>全国人民代表大会常务委员会每届任期同全国人民代表大会每届任期相同，它行使职权到下届全国人民代表大会选出新的常务委员会为止。 委员长、副委员长连续任职不得超过两届。</p><p><strong>第六十七条</strong></p><p>全国人民代表大会常务委员会行使下列职权： </p><ul><li>（一）解释宪法，监督宪法的实施； </li><li>（二）制定和修改除应当由全国人民代表大会制定的法律以外的其他法律； </li><li>（三）在全国人民代表大会闭会期间，对全国人民代表大会制定的法律进行部分补充和修改，但是不得同该法律的基本原则相抵触； </li><li>（四）解释法律； </li><li>（五）在全国人民代表大会闭会期间，审查和批准国民经济和社会发展计划、国家预算在执行过程中所必须作的部分调整方案； </li><li>（六）监督国务院、中央军事委员会、国家监察委员会、最高人民法院和最高人民检察院的工作； </li><li>（七）撤销国务院制定的同宪法、法律相抵触的行政法规、决定和命令； </li><li>（八）撤销省、自治区、直辖市国家权力机关制定的同宪法、法律和行政法规相抵触的地方性法规和决议； </li><li>（九）在全国人民代表大会闭会期间，根据国务院总理的提名，决定部长、委员会主任、审计长、秘书长的人选； </li><li>（十）在全国人民代表大会闭会期间，根据中央军事委员会主席的提名，决定中央军事委员会其他组成人员的人选； </li><li>（十一）根据国家监察委员会主任的提请，任免国家监察委员会副主任、委员； </li><li>（十二）根据最高人民法院院长的提请，任免最高人民法院副院长、审判员、审判委员会委员和军事法院院长； </li><li>（十三）根据最高人民检察院检察长的提请，任免最高人民检察院副检察长、检察员、检察委员会委员和军事检察院检察长，并且批准省、自治区、直辖市的人民检察院检察长的任免； </li><li>（十四）决定驻外全权代表的任免； </li><li>（十五）决定同外国缔结的条约和重要协定的批准和废除； </li><li>（十六）规定军人和外交人员的衔级制度和其他专门衔级制度； </li><li>（十七）规定和决定授予国家的勋章和荣誉称号； </li><li>（十八）决定特赦； </li><li>（十九）在全国人民代表大会闭会期间，如果遇到国家遭受武装侵犯或者必须履行国际间共同防止侵略的条约的情况，决定战争状态的宣布； </li><li>（二十）决定全国总动员或者局部动员； </li><li>（二十一）决定全国或者个别省、自治区、直辖市进入紧急状态； </li><li>（二十二）全国人民代表大会授予的其他职权。</li></ul><p><strong>第六十八条</strong></p><p>全国人民代表大会常务委员会委员长主持全国人民代表大会常务委员会的工作，召集全国人民代表大会常务委员会会议。副委员长、秘书长协助委员长工作。 委员长、副委员长、秘书长组成委员长会议，处理全国人民代表大会常务委员会的重要日常工作。</p><p><strong>第六十九条</strong></p><p>全国人民代表大会常务委员会对全国人民代表大会负责并报告工作。</p><p><strong>第七十条</strong></p><p>全国人民代表大会设立民族委员会、宪法和法律委员会、财政经济委员会、教育科学文化卫生委员会、外事委员会、华侨委员会和其他需要设立的专门委员会。在全国人民代表大会闭会期间，各专门委员会受全国人民代表大会常务委员会的领导。 各专门委员会在全国人民代表大会和全国人民代表大会常务委员会领导下，研究、审议和拟订有关议案。</p><p><strong>第七十一条</strong></p><p>全国人民代表大会和全国人民代表大会常务委员会认为必要的时候，可以组织关于特定问题的调查委员会，并且根据调查委员会的报告，作出相应的决议。 调查委员会进行调查的时候，一切有关的国家机关、社会团体和公民都有义务向它提供必要的材料。</p><p><strong>第七十二条</strong></p><p>全国人民代表大会代表和全国人民代表大会常务委员会组成人员，有权依照法律规定的程序分别提出属于全国人民代表大会和全国人民代表大会常务委员会职权范围内的议案。</p><p><strong>第七十三条</strong></p><p>全国人民代表大会代表在全国人民代表大会开会期间，全国人民代表大会常务委员会组成人员在常务委员会开会期间，有权依照法律规定的程序提出对国务院或者国务院各部、各委员会的质询案。受质询的机关必须负责答复。</p><p><strong>第七十四条</strong></p><p>全国人民代表大会代表，非经全国人民代表大会会议主席团许可，在全国人民代表大会闭会期间非经全国人民代表大会常务委员会许可，不受逮捕或者刑事审判。</p><p><strong>第七十五条</strong></p><p>全国人民代表大会代表在全国人民代表大会各种会议上的发言和表决，不受法律追究。</p><p><strong>第七十六条</strong></p><p>全国人民代表大会代表必须模范地遵守宪法和法律，保守国家秘密，并且在自己参加的生产、工作和社会活动中，协助宪法和法律的实施。 全国人民代表大会代表应当同原选举单位和人民保持密切的联系，听取和反映人民的意见和要求，努力为人民服务。</p><p><strong>第七十七条</strong></p><p>全国人民代表大会代表受原选举单位的监督。原选举单位有权依照法律规定的程序罢免本单位选出的代表。</p><p><strong>第七十八条</strong></p><p>全国人民代表大会和全国人民代表大会常务委员会的组织和工作程序由法律规定。</p><p><strong>第七十九条</strong></p><p>中华人民共和国主席、副主席由全国人民代表大会选举。 有选举权和被选举权的年满四十五周岁的中华人民共和国公民可以被选为中华人民共和国主席、副主席。 中华人民共和国主席、副主席每届任期同全国人民代表大会每届任期相同。</p><p><strong>第八十条</strong></p><p>中华人民共和国主席根据全国人民代表大会的决定和全国人民代表大会常务委员会的决定，公布法律，任免国务院总理、副总理、国务委员、各部部长、各委员会主任、审计长、秘书长，授予国家的勋章和荣誉称号，发布特赦令，宣布进入紧急状态，宣布战争状态，发布动员令。</p><p><strong>第八十一条</strong></p><p>中华人民共和国主席代表中华人民共和国，进行国事活动，接受外国使节；根据全国人民代表大会常务委员会的决定，派遣和召回驻外全权代表，批准和废除同外国缔结的条约和重要协定。</p><p><strong>第八十二条</strong></p><p>中华人民共和国副主席协助主席工作。 中华人民共和国副主席受主席的委托，可以代行主席的部分职权。</p><p><strong>第八十三条</strong></p><p>中华人民共和国主席、副主席行使职权到下届全国人民代表大会选出的主席、副主席就职为止。</p><p><strong>第八十四条</strong></p><p>中华人民共和国主席缺位的时候，由副主席继任主席的职位。 中华人民共和国副主席缺位的时候，由全国人民代表大会补选。 中华人民共和国主席、副主席都缺位的时候，由全国人民代表大会补选；在补选以前，由全国人民代表大会常务委员会委员长暂时代理主席职位。</p><p><strong>第八十五条</strong></p><p>中华人民共和国国务院，即中央人民政府，是最高国家权力机关的执行机关，是最高国家行政机关。</p><p><strong>第八十六条</strong></p><p>国务院由下列人员组成： 总理， 副总理若干人， 国务委员若干人， 各部部长， 各委员会主任， 审计长， 秘书长。 国务院实行总理负责制。各部、各委员会实行部长、主任负责制。 国务院的组织由法律规定。</p><p><strong>第八十七条</strong></p><p>国务院每届任期同全国人民代表大会每届任期相同。 总理、副总理、国务委员连续任职不得超过两届。</p><p><strong>第八十八条</strong></p><p>总理领导国务院的工作。副总理、国务委员协助总理工作。 总理、副总理、国务委员、秘书长组成国务院常务会议。 总理召集和主持国务院常务会议和国务院全体会议。</p><p><strong>第八十九条</strong></p><p>国务院行使下列职权： </p><ul><li>（一）根据宪法和法律，规定行政措施，制定行政法规，发布决定和命令； </li><li>（二）向全国人民代表大会或者全国人民代表大会常务委员会提出议案； </li><li>（三）规定各部和各委员会的任务和职责，统一领导各部和各委员会的工作，并且领导不属于各部和各委员会的全国性的行政工作； </li><li>（四）统一领导全国地方各级国家行政机关的工作，规定中央和省、自治区、直辖市的国家行政机关的职权的具体划分； </li><li>（五）编制和执行国民经济和社会发展计划和国家预算； </li><li>（六）领导和管理经济工作和城乡建设、生态文明建设； </li><li>（七）领导和管理教育、科学、文化、卫生、体育和计划生育工作； </li><li>（八）领导和管理民政、公安、司法行政等工作； </li><li>（九）管理对外事务，同外国缔结条约和协定； </li><li>（十）领导和管理国防建设事业； </li><li>（十一）领导和管理民族事务，保障少数民族的平等权利和民族自治地方的自治权利； </li><li>（十二）保护华侨的正当的权利和利益，保护归侨和侨眷的合法的权利和利益； </li><li>（十三）改变或者撤销各部、各委员会发布的不适当的命令、指示和规章； </li><li>（十四）改变或者撤销地方各级国家行政机关的不适当的决定和命令； </li><li>（十五）批准省、自治区、直辖市的区域划分，批准自治州、县、自治县、市的建置和区域划分； </li><li>（十六）依照法律规定决定省、自治区、直辖市的范围内部分地区进入紧急状态； </li><li>（十七）审定行政机构的编制，依照法律规定任免、培训、考核和奖惩行政人员； </li><li>（十八）全国人民代表大会和全国人民代表大会常务委员会授予的其他职权。</li></ul><p><strong>第九十条</strong></p><p>国务院各部部长、各委员会主任负责本部门的工作；召集和主持部务会议或者委员会会议、委务会议，讨论决定本部门工作的重大问题。 各部、各委员会根据法律和国务院的行政法规、决定、命令，在本部门的权限内，发布命令、指示和规章。</p><p><strong>第九十一条</strong></p><p>国务院设立审计机关，对国务院各部门和地方各级政府的财政收支，对国家的财政金融机构和企业事业组织的财务收支，进行审计监督。 审计机关在国务院总理领导下，依照法律规定独立行使审计监督权，不受其他行政机关、社会团体和个人的干涉。</p><p><strong>第九十二条</strong></p><p>国务院对全国人民代表大会负责并报告工作；在全国人民代表大会闭会期间，对全国人民代表大会常务委员会负责并报告工作。</p><p><strong>第九十三条</strong></p><p>中华人民共和国中央军事委员会领导全国武装力量。 中央军事委员会由下列人员组成： 主席， 副主席若干人， 委员若干人。 中央军事委员会实行主席负责制。 中央军事委员会每届任期同全国人民代表大会每届任期相同。</p><p><strong>第九十四条</strong></p><p>中央军事委员会主席对全国人民代表大会和全国人民代表大会常务委员会负责。</p><p><strong>第九十五条</strong></p><p>省、直辖市、县、市、市辖区、乡、民族乡、镇设立人民代表大会和人民政府。 地方各级人民代表大会和地方各级人民政府的组织由法律规定。 自治区、自治州、自治县设立自治机关。自治机关的组织和工作根据宪法第三章第五节、第六节规定的基本原则由法律规定。</p><p><strong>第九十六条</strong></p><p>地方各级人民代表大会是地方国家权力机关。 县级以上的地方各级人民代表大会设立常务委员会。</p><p><strong>第九十七条</strong></p><p>省、直辖市、设区的市的人民代表大会代表由下一级的人民代表大会选举；县、不设区的市、市辖区、乡、民族乡、镇的人民代表大会代表由选民直接选举。 地方各级人民代表大会代表名额和代表产生办法由法律规定。</p><p><strong>第九十八条</strong></p><p>地方各级人民代表大会每届任期五年。</p><p><strong>第九十九条</strong></p><p>地方各级人民代表大会在本行政区域内，保证宪法、法律、行政法规的遵守和执行；依照法律规定的权限，通过和发布决议，审查和决定地方的经济建设、文化建设和公共事业建设的计划。 县级以上的地方各级人民代表大会审查和批准本行政区域内的国民经济和社会发展计划、预算以及它们的执行情况的报告；有权改变或者撤销本级人民代表大会常务委员会不适当的决定。 民族乡的人民代表大会可以依照法律规定的权限采取适合民族特点的具体措施。</p><p><strong>第一百条</strong></p><p>省、直辖市的人民代表大会和它们的常务委员会，在不同宪法、法律、行政法规相抵触的前提下，可以制定地方性法规，报全国人民代表大会常务委员会备案。 设区的市的人民代表大会和它们的常务委员会，在不同宪法、法律、行政法规和本省、自治区的地方性法规相抵触的前提下，可以依照法律规定制定地方性法规，报本省、自治区人民代表大会常务委员会批准后施行。</p><p><strong>第一百零一条</strong></p><p>地方各级人民代表大会分别选举并且有权罢免本级人民政府的省长和副省长、市长和副市长、县长和副县长、区长和副区长、乡长和副乡长、镇长和副镇长。 县级以上的地方各级人民代表大会选举并且有权罢免本级监察委员会主任、本级人民法院院长和本级人民检察院检察长。选出或者罢免人民检察院检察长，须报上级人民检察院检察长提请该级人民代表大会常务委员会批准。</p><p><strong>第一百零二条</strong></p><p>省、直辖市、设区的市的人民代表大会代表受原选举单位的监督；县、不设区的市、市辖区、乡、民族乡、镇的人民代表大会代表受选民的监督。 地方各级人民代表大会代表的选举单位和选民有权依照法律规定的程序罢免由他们选出的代表。</p><p><strong>第一百零三条</strong></p><p>县级以上的地方各级人民代表大会常务委员会由主任、副主任若干人和委员若干人组成，对本级人民代表大会负责并报告工作。 县级以上的地方各级人民代表大会选举并有权罢免本级人民代表大会常务委员会的组成人员。 县级以上的地方各级人民代表大会常务委员会的组成人员不得担任国家行政机关、监察机关、审判机关和检察机关的职务。</p><p><strong>第一百零四条</strong></p><p>县级以上的地方各级人民代表大会常务委员会讨论、决定本行政区域内各方面工作的重大事项；监督本级人民政府、监察委员会、人民法院和人民检察院的工作；撤销本级人民政府的不适当的决定和命令；撤销下一级人民代表大会的不适当的决议；依照法律规定的权限决定国家机关工作人员的任免；在本级人民代表大会闭会期间，罢免和补选上一级人民代表大会的个别代表。</p><p><strong>第一百零五条</strong></p><p>地方各级人民政府是地方各级国家权力机关的执行机关，是地方各级国家行政机关。 地方各级人民政府实行省长、市长、县长、区长、乡长、镇长负责制。</p><p><strong>第一百零六条</strong></p><p>地方各级人民政府每届任期同本级人民代表大会每届任期相同。</p><p><strong>第一百零七条</strong></p><p>县级以上地方各级人民政府依照法律规定的权限，管理本行政区域内的经济、教育、科学、文化、卫生、体育事业、城乡建设事业和财政、民政、公安、民族事务、司法行政、计划生育等行政工作，发布决定和命令，任免、培训、考核和奖惩行政工作人员。 乡、民族乡、镇的人民政府执行本级人民代表大会的决议和上级国家行政机关的决定和命令，管理本行政区域内的行政工作。 省、直辖市的人民政府决定乡、民族乡、镇的建置和区域划分。</p><p><strong>第一百零八条</strong></p><p>县级以上的地方各级人民政府领导所属各工作部门和下级人民政府的工作，有权改变或者撤销所属各工作部门和下级人民政府的不适当的决定。</p><p><strong>第一百零九条</strong></p><p>县级以上的地方各级人民政府设立审计机关。地方各级审计机关依照法律规定独立行使审计监督权，对本级人民政府和上一级审计机关负责。</p><p><strong>第一百一十条</strong></p><p>地方各级人民政府对本级人民代表大会负责并报告工作。县级以上的地方各级人民政府在本级人民代表大会闭会期间，对本级人民代表大会常务委员会负责并报告工作。 地方各级人民政府对上一级国家行政机关负责并报告工作。全国地方各级人民政府都是国务院统一领导下的国家行政机关，都服从国务院。</p><p><strong>第一百一十一条</strong></p><p>城市和农村按居民居住地区设立的居民委员会或者村民委员会是基层群众性自治组织。居民委员会、村民委员会的主任、副主任和委员由居民选举。居民委员会、村民委员会同基层政权的相互关系由法律规定。 居民委员会、村民委员会设人民调解、治安保卫、公共卫生等委员会，办理本居住地区的公共事务和公益事业，调解民间纠纷，协助维护社会治安，并且向人民政府反映群众的意见、要求和提出建议。</p><p><strong>第一百一十二条</strong></p><p>民族自治地方的自治机关是自治区、自治州、自治县的人民代表大会和人民政府。</p><p><strong>第一百一十三条</strong></p><p>自治区、自治州、自治县的人民代表大会中，除实行区域自治的民族的代表外，其他居住在本行政区域内的民族也应当有适当名额的代表。 自治区、自治州、自治县的人民代表大会常务委员会中应当有实行区域自治的民族的公民担任主任或者副主任。</p><p><strong>第一百一十四条</strong></p><p>自治区主席、自治州州长、自治县县长由实行区域自治的民族的公民担任。</p><p><strong>第一百一十五条</strong></p><p>自治区、自治州、自治县的自治机关行使宪法第三章第五节规定的地方国家机关的职权，同时依照宪法、民族区域自治法和其他法律规定的权限行使自治权，根据本地方实际情况贯彻执行国家的法律、政策。</p><p><strong>第一百一十六条</strong></p><p>民族自治地方的人民代表大会有权依照当地民族的政治、经济和文化的特点，制定自治条例和单行条例。自治区的自治条例和单行条例，报全国人民代表大会常务委员会批准后生效。自治州、自治县的自治条例和单行条例，报省或者自治区的人民代表大会常务委员会批准后生效，并报全国人民代表大会常务委员会备案。</p><p><strong>第一百一十七条</strong></p><p>民族自治地方的自治机关有管理地方财政的自治权。凡是依照国家财政体制属于民族自治地方的财政收入，都应当由民族自治地方的自治机关自主地安排使用。</p><p><strong>第一百一十八条</strong></p><p>民族自治地方的自治机关在国家计划的指导下，自主地安排和管理地方性的经济建设事业。 国家在民族自治地方开发资源、建设企业的时候，应当照顾民族自治地方的利益。</p><p><strong>第一百一十九条</strong></p><p>民族自治地方的自治机关自主地管理本地方的教育、科学、文化、卫生、体育事业，保护和整理民族的文化遗产，发展和繁荣民族文化。</p><p><strong>第一百二十条</strong></p><p>民族自治地方的自治机关依照国家的军事制度和当地的实际需要，经国务院批准，可以组织本地方维护社会治安的公安部队。</p><p><strong>第一百二十一条</strong></p><p>民族自治地方的自治机关在执行职务的时候，依照本民族自治地方自治条例的规定，使用当地通用的一种或者几种语言文字。</p><p><strong>第一百二十二条</strong></p><p>国家从财政、物资、技术等方面帮助各少数民族加速发展经济建设和文化建设事业。 国家帮助民族自治地方从当地民族中大量培养各级干部、各种专业人才和技术工人。</p><p><strong>第一百二十三条</strong></p><p>中华人民共和国各级监察委员会是国家的监察机关。</p><p><strong>第一百二十四条</strong></p><p>中华人民共和国设立国家监察委员会和地方各级监察委员会。 监察委员会由下列人员组成： 主任， 副主任若干人， 委员若干人。 监察委员会主任每届任期同本级人民代表大会每届任期相同。国家监察委员会主任连续任职不得超过两届。 监察委员会的组织和职权由法律规定。</p><p><strong>第一百二十五条</strong></p><p>中华人民共和国国家监察委员会是最高监察机关。 国家监察委员会领导地方各级监察委员会的工作，上级监察委员会领导下级监察委员会的工作。</p><p><strong>第一百二十六条</strong></p><p>国家监察委员会对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级监察委员会对产生它的国家权力机关和上一级监察委员会负责。</p><p><strong>第一百二十七条</strong></p><p>监察委员会依照法律规定独立行使监察权，不受行政机关、社会团体和个人的干涉。 监察机关办理职务违法和职务犯罪案件，应当与审判机关、检察机关、执法部门互相配合，互相制约。</p><p><strong>第一百二十八条</strong></p><p>中华人民共和国人民法院是国家的审判机关。</p><p><strong>第一百二十九条</strong></p><p>中华人民共和国设立最高人民法院、地方各级人民法院和军事法院等专门人民法院。 最高人民法院院长每届任期同全国人民代表大会每届任期相同，连续任职不得超过两届。 人民法院的组织由法律规定。</p><p><strong>第一百三十条</strong></p><p>人民法院审理案件，除法律规定的特别情况外，一律公开进行。被告人有权获得辩护。</p><p><strong>第一百三十一条</strong></p><p>人民法院依照法律规定独立行使审判权，不受行政机关、社会团体和个人的干涉。</p><p><strong>第一百三十二条</strong></p><p>最高人民法院是最高审判机关。 最高人民法院监督地方各级人民法院和专门人民法院的审判工作，上级人民法院监督下级人民法院的审判工作。</p><p><strong>第一百三十三条</strong></p><p>最高人民法院对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级人民法院对产生它的国家权力机关负责。</p><p><strong>第一百三十四条</strong></p><p>中华人民共和国人民检察院是国家的法律监督机关。</p><p><strong>第一百三十五条</strong></p><p>中华人民共和国设立最高人民检察院、地方各级人民检察院和军事检察院等专门人民检察院。 最高人民检察院检察长每届任期同全国人民代表大会每届任期相同，连续任职不得超过两届。 人民检察院的组织由法律规定。</p><p><strong>第一百三十六条</strong></p><p>人民检察院依照法律规定独立行使检察权，不受行政机关、社会团体和个人的干涉。</p><p><strong>第一百三十七条</strong></p><p>最高人民检察院是最高检察机关。 最高人民检察院领导地方各级人民检察院和专门人民检察院的工作，上级人民检察院领导下级人民检察院的工作。</p><p><strong>第一百三十八条</strong></p><p>最高人民检察院对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级人民检察院对产生它的国家权力机关和上级人民检察院负责。</p><p><strong>第一百三十九条</strong></p><p>各民族公民都有用本民族语言文字进行诉讼的权利。人民法院和人民检察院对于不通晓当地通用的语言文字的诉讼参与人，应当为他们翻译。 在少数民族聚居或者多民族共同居住的地区，应当用当地通用的语言进行审理；起诉书、判决书、布告和其他文书应当根据实际需要使用当地通用的一种或者几种文字。</p><p><strong>第一百四十条</strong></p><p>人民法院、人民检察院和公安机关办理刑事案件，应当分工负责，互相配合，互相制约，以保证准确有效地执行法律。</p><h3 id="第四章-国旗、国歌、国徽、首都"><a href="#第四章-国旗、国歌、国徽、首都" class="headerlink" title="第四章　国旗、国歌、国徽、首都"></a>第四章　国旗、国歌、国徽、首都</h3><p><strong>第一百四十一条</strong></p><p>中华人民共和国国旗是五星红旗。 中华人民共和国国歌是《义勇军进行曲》。</p><p><strong>第一百四十二条</strong></p><p>中华人民共和国国徽，中间是五星照耀下的天安门，周围是谷穗和齿轮。</p><p><strong>第一百四十三条</strong></p><p>中华人民共和国首都是北京。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;基本信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发文字号：全国人民代表大会公告第1号&lt;/p&gt;
&lt;p&gt;效力级别：法律&lt;/p&gt;
&lt;p&gt;时效性：现行有效&lt;/p&gt;
&lt;p&gt;发布日期：2018-03-11&lt;/p&gt;
&lt;p&gt;实施日期：2018-03-11&lt;/p&gt;
&lt;p&gt;发布机关：全国人民代表大会&lt;/p&gt;
    
    </summary>
    
    
      <category term="法律" scheme="http://tanchuchu.github.io/categories/%E6%B3%95%E5%BE%8B/"/>
    
    
      <category term="法律" scheme="http://tanchuchu.github.io/tags/%E6%B3%95%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>github page网站cdn优化加速</title>
    <link href="http://tanchuchu.github.io/posts/346ce02e/"/>
    <id>http://tanchuchu.github.io/posts/346ce02e/</id>
    <published>2019-09-25T08:41:46.000Z</published>
    <updated>2020-08-28T01:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p><p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p><a id="more"></a><h3 id="图片加速"><a href="#图片加速" class="headerlink" title="图片加速"></a>图片加速</h3><p>关于图传以及GitHub作为图库的使用方法请参考文章：<a href="https://removeif.github.io/2019/06/20/博客图片上传picgo工具github图传使用.html">博客图片上传picgo工具github图传使用</a>。</p><p>在上面参考文章的基础之上只需要修改以下配置：<strong>（指定相关cdn域名）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20190925161709.png" alt=""></p><p>原来项目中使用了原来的方式，进行全局替换，<strong>Mac idea</strong>直接快捷键<code>command+shift+R</code>全局替换</p><p><img src="https://cdn.jsdelivr.net/gh/removeif/blog_image/img/2019/20190925162235.png" alt=""></p><p><strong>【ps：题外话】</strong>原来是统一用的GitHub的仓库中的图片，通过这样替换，可以看到图片统一管理是多么的重要，多么的方便管理操作。</p><p>至此，博客中的相关图片都加上了cdn。</p><h3 id="其余资源文件"><a href="#其余资源文件" class="headerlink" title="其余资源文件"></a>其余资源文件</h3><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@1.0&#x2F;images&#x2F;trhx.png</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@2.0.1&#x2F;css&#x2F;style.css</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;moezx&#x2F;cdn@3.1.3&#x2F;&#x2F;The%20Pet%20Girl%20of%20Sakurasou.mp4</span><br></pre></td></tr></table></figure><p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 加载任何Github发布、提交或分支</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;user&#x2F;repo@version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载 jQuery v3.2.1</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2.1&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 使用版本范围而不是特定版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 完全省略该版本以获取最新版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将“.min”添加到任何JS&#x2F;CSS文件中以获取缩小版本，如果不存在，将为会自动生成</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2.1&#x2F;src&#x2F;core.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在末尾添加 &#x2F; 以获取资源目录列表</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery&#x2F;</span><br></pre></td></tr></table></figure><p>至此，github page 博客基本需要加速的完成。</p><p>参考文章:<br><a href="https://blog.csdn.net/qq_36759224/article/details/86936453">参考链接1</a><br><a href="https://blog.csdn.net/qq_36759224/article/details/98058240">参考链接2</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科&lt;/p&gt;
&lt;p&gt;放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具教程" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"/>
    
      <category term="主题工具" scheme="http://tanchuchu.github.io/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E4%B8%BB%E9%A2%98%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具教程" scheme="http://tanchuchu.github.io/tags/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
